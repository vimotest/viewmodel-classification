Cites,Authors,Title,Year,Source,Publisher,ArticleURL,CitesURL,GSRank,QueryDate,Type,DOI,ISSN,CitationURL,Volume,Issue,StartPage,EndPage,ECC,CitesPerYear,CitesPerAuthor,AuthorCount,Age,Abstract,FullTextURL,RelatedURL
2,"Dong-Chul Lee, Kyung-Min Seo, Hee-Mun Park, B. Kim","Simulation Testing of Maritime Cyber-Physical Systems: Application of Model-View-ViewModel",2022,"","","","",1,"2023-02-26 08:25:51","","10.1155/2022/1742772","","",,,,,2,2.00,1,4,1,"From the perspective of the system of systems development, system-level functional testing is required for designing subsystems. This study utilizes modeling and simulation techniques to analyze the operational behaviors of the subsystems and confirm data communication between them. The targeted system in the study is a naval combat system (NCS), which is a typical type of defense cyber-physical system (CPS). Three types of models were designed for the simulation testing of the NCS: a combat-management model for simulating the overall computational activities, physical models to confirm the intrasubsystem behaviors, and data integration models to test the intersubsystem communications. These models are realized with the Model-View-ViewModel design pattern, which strongly facilitates graphical user interfaces being decoupled from model logic and data. We consider underwater combat scenarios as an application. Six significant physical subsystems within the NCS are simulated and tested: a ship-steering system, an inertial navigation system, a global navigation satellite system, a periscope, sonar systems, and a plotting board. We expect that the proposed work will play a principal role when analyzing the behaviors and communications of defense CPSs and providing an environment for functional testing as a digital twin.","",""
0,"Mario Fuksa","ViMoTest: a low code approach to specify ViewModel-based tests with a projectional DSL using JetBrains MPS",2022,"","","","",2,"2023-02-26 08:25:51","","10.1145/3550356.3558513","","",,,,,0,0.00,0,1,1,"Automated testing for software is a fundamental part of achieving high-quality software systems. In particular, the user interface (UI) is one suitable abstraction layer for automated tests. However, software test developers usually spend considerable effort writing automated UI tests in a maintainable way. Therefore, this work proposes a concept to design a low code approach using the ViewModel architectural pattern as an abstraction layer to develop automated UI tests. We use the Design Science Research method to design a projectional DSL as an artifact to refine our approach. As planned results, we aim to (1) develop a projectional DSL to specify ViewModel-based tests, (2) apply this novel approach in an industrial and an open-source project, and (3) perform empirical studies to get feedback for improving this approach w.r.t. creation, maintenance, and understandability of test suites. We conclude that a low code approach using a projectional DSL to specify automated tests based on ViewModels could have several benefits compared to similar approaches.","",""
0,"Rismayani Rismayani, Madyana Patasik, N. S. Layuk, Surya Saputra, A. Muhajir","Aplikasi Tracking Rekreasi dan Aktivitas Menggunakan Model View ViewModel di Provinsi Sulawesi Selatan",2022,"","","","",3,"2023-02-26 08:25:51","","10.22303/csrid.14.2.2022.176-187","","",,,,,0,0.00,0,5,1,"Sulawesi Selatan adalah sebuah provinsi di Indonesia yang terletak di pesisir barat daya Pulau Sulawesi. Daerah ini dihuni oleh banyak suku, antara lain suku Makassar, Bugis, Toraja dan Mandar. Kawasan yang hampir seluruhnya dikelilingi laut ini menawarkan berbagai aktivitas rekreasi dan objek wisata menarik yang bisa dikunjungi. Permasalahan dalam penelitian ini adalah belum adanya sistem pengelolaan informasi di Sulawesi Selatan untuk informasi di berbagai daerah di Provinsi Sulawesi Selatan dan bagaimana mengimplementasikan konsep model View ViewModel (MVVM) dalam merancang sistem pelacakan aktivitas dan rekreasi di Provinsi Sulawesi Selatan. Tujuan dari penelitian ini adalah untuk membuat sistem pelacakan aktivitas dan rekreasi berbasis android di Provinsi Sulawesi Selatan dan mengimplementasikan view viewmodel (MVVM) dalam proses pelacakan aktivitas dan rekreasi di Sulawesi Selatan. Metode dan teknologi yang digunakan adalah Model View View Model (MVVM) dengan teknologi berbasis android, Model View ViewModel (MVVM) merupakan salah satu pola arsitektur yang digunakan dalam pengembangan perangkat lunak berbasis Graphical User Interface (GUI), sedangkan android sebagai operasinya sistem untuk perangkat seluler. Hasil penelitian menunjukkan bahwa sistem ini dapat membantu wisatawan menemukan tracking aktivitas dan rekreasi di Sulawesi Selatan dan dengan penerapan View View Model (MVVM) sistem tracking aktivitas dan rekreasi menjadi lebih menarik, efektif dan efisien. Berdasarkan pengujian fungsional yang dilakukan ditemukan hasil yang valid terhadap semua fungsi dari sistem. Berdasarkan hasil kuesioner untuk mengetahui manfaat dari sistem yang dibagun diperoleh dari 50 responden hasilnya menyatakan 86, 7% bermanfaat.","",""
0,"Xiaozhen Li, Shujie Wang, Zesan Liu, Gang Wu","Design and implementation of enterprise web application common framework based on model-view-viewmodel architecture",2022,"","","","",4,"2023-02-26 08:25:51","","10.1117/12.2661040","","",,,,,0,0.00,0,4,1,"Based on the shortcomings of MVVM framework in enterprise level applications, this paper proposes a flexible common framework for enterprise level Web applications based on MVVM framework, designs core functions such as custom tag components and dynamic page component assembly mechanism and implements them based on the lightweight front-end framework knockout. The public framework designed and implemented in this paper introduces MVVM excellent architecture mode, flexible customization mode and high browser compatibility for traditional enterprises.","",""
0,"Ghani Rasyid Hika, Ida Bagus Gede Dwidasmara, I. G. Wibawa, I. K. G. Suhartana, I. P. B. Mahendra, M. A. Raharja","Pengembangan Aplikasi Rekomendasi Pet Shop Berbasis Android Menggunakan Arsitektur MVVM (Model-View-Viewmodel)",2022,"","","","",5,"2023-02-26 08:25:51","","10.24843/jlk.2022.v11.i02.p15","","",,,,,0,0.00,0,6,1,"At this time, keeping pets such as cats has become a lifestyle for pet lovers, sometimes many consider these pets as their own family. Therefore, pet owners always provide the best care for their beloved animals. Sometimes people are confused about which place is the best for their pet, which one is cheaper, which one is suitable for the type of pet, the benefits, and the location is not too far away. This system uses one of the methods in the Decision Support System. By using the Analytical Hierarchy Process (AHP) and Technique for Order Preference by Similarity to Ideal Solution (TOPSIS) methods in a Decision Support System, it is hoped that it can help solve problems in semi-structured areas such as the problems above. This study aims to assist users in determining which pet shop they want to visit.","",""
0,"Adha Setiawan Wiyana, M. Putera, S. R. Natasia","Sistem Presensi Online Menggunakan Arsitektur Pengembangan Perangkat Lunak Model-View-Viewmodel",2021,"","","","",6,"2023-02-26 08:25:51","","10.34148/teknika.v10i3.398","","",,,,,0,0.00,0,3,2,"PT. Lintasmaya Network Samarinda adalah perusahaan yang bergerak di bidang jasa dengan memberikan layanan IT Support kepada perusahaan lain. Sebagai perusahaan yang bergerak di bidang jasa, PT. Lintasmaya Network Samarinda perlu memastikan untuk dapat memberikan layanan terbaik kepada konsumen dengan memperhatikan kinerja karyawan. Agar hal tersebut dapat tercapai, maka solusi yang dipilih oleh PT. Lintamaya Network Samarinda adalah membangun sistem presensi berbasis aplikasi mobile. Hanya saja karena PT. Lintasmaya Network Samarinda tidak memiliki kemampuan dan pengalaman dalam mengembangkan sebuah aplikasi mobile, sistem presensi tersebut tidak dapat berjalan dengan baik. Berangkat dari masalah tersebut, maka diadakan penelitian pengembangan sistem presensi berbasis aplikasi mobile dengan menggunakan metode pengembangan perangkat lunak Personal Extreme Programming (PXP) dan arsitektur Model-View-Viewodel (MVVM). Metode pengembangan perangkat lunak PXP terdiri dari tujuh proses yaitu requirement, planning, iteration initialization, design, implementation, system testing, dan retrospective. Sedangkan aristektur MVVM adalah penulisan kode yang dibagi menjadi tiga bagian terdiri dari view, viewmodel, dan model. Adapun hal lain yang menjadi perhatian dalam penelitian ini adalah penerapan IMEI untuk mengenali perangkat, GPS untuk mendapatkan lokasi, dan JWT Authentication untuk keamanan fitur. Melalui penerapan tersebut, sistem dapat memberikan hal positif seperti data yang akurat dan penggunaan fitur yang terbatas hanya untuk pihak perusahaan.","",""
0,"Edo Arribe, Aryanto, Rudi Asrianto","APLIKASI E-MARKETPLACE MENGGUNAKAN ARSITEKTUR MVVM (MODEL-VIEW-VIEWMODEL) BERBASIS ANDROID",2021,"","","","",7,"2023-02-26 08:25:51","","10.37859/jf.v11i2.2762","","",,,,,0,0.00,0,3,2,"<jats:p>a</jats:p>","",""
0,"Waseem Sheikh, Nadeem Sheikh","A Model-View-ViewModel (MVVM) Application Framework for Hearing Impairment Diagnosis - Class Inheritance Architecture",2020,"","","","",8,"2023-02-26 08:25:51","","10.1109/IETC47856.2020.9249215","","",,,,,0,0.00,0,2,3,"Around 466 million people worldwide (over 5% of the world's population) have disabling hearing loss, and out of these 34 million are children. Estimates suggest that by 2050, over 900 million people worldwide will have disabling hearing loss. The annual global cost of unaddressed hearing loss amounts to US$ 750 billion. Early detection of hearing loss can reduce its impact on an individual's life in addition to saving a huge cost. This paper, the last one in a series of three papers, presents the class inheritance architecture of an open-source application framework for hearing impairment diagnosis. The framework is built using the Model-View-ViewModel (MVVM) pattern which separates the development of graphical user interface (GUI) from the development of business and back-end logic. Some of the benefits of the MVVM pattern include reusable components, independent development of GUI and business or back-end logic, flexibility to modify GUI without having to change business or back-end logic, ease of unit testing, and reduced maintenance overhead. The proposed framework along with the open-source code makes it possible to easily extend the application functionality thus enabling other researchers and practitioners to develop their own versions of hearing loss diagnosis applications. The proposed software was evaluated by an otolaryngologist and found to be very beneficial in assisting a clinician to reach a hearing impairment diagnosis conclusion more methodically, swiftly and accurately.","",""
0,"Waseem Sheikh, Nadeem Sheikh","A Model-View-ViewModel (MVVM) Application Framework for Hearing Impairment Diagnosis - Design and Features",2020,"","","","",9,"2023-02-26 08:25:51","","10.1109/IETC47856.2020.9249124","","",,,,,0,0.00,0,2,3,"Around 466 million people worldwide (over 5% of the world's population) have disabling hearing loss, and out of these 34 million are children. Estimates suggest that by 2050, over 900 million people worldwide will have disabling hearing loss. The annual global cost of unaddressed hearing loss amounts to US$ 750 billion. Early detection of hearing loss can reduce its impact on an individual's life in addition to saving a huge cost. This paper, the first in a series of three papers, presents the design and features of an open-source application framework for hearing impairment diagnosis. The framework is built using the Model-View-ViewModel (MVVM) pattern which separates the development of graphical user interface (GUI) from the development of business and back-end logic. Some of the benefits of the MVVM pattern include reusable components, independent development of GUI and business or back-end logic, flexibility to modify GUI without having to change business or back-end logic, ease of unit testing, and reduced maintenance overhead. The proposed framework along with the open-source code makes it possible to easily extend the application functionality thus enabling other researchers and practitioners to develop their own versions of hearing loss diagnosis applications. The proposed software was evaluated by an otolaryngologist and found to be very beneficial in assisting a clinician to reach a hearing impairment diagnosis conclusion more methodically, swiftly and accurately.","",""
0,"M. S. Arif, A. Musthafa, D. Muriyatmoko","Implementation of Model-View-ViewModel (MVVM) Architecture Pattern in the Sistem Informasi Akademik UNIDA Gontor Mobile Application",2020,"","","","",10,"2023-02-26 08:25:51","","10.5281/ZENODO.3710686","","",,,,,0,0.00,0,3,3,"Software architecture primarily tuned for moderating the rising software complexities and changes. Model-View-ViewModel (MVVM) is a software architectural pattern that facilitates a separation of development of the graphical user interface from the development of the back-end logic (the data model). University of Darussalam Gontor (UNIDA Gontor) is having an Academic System called Sistem Informasi Akademik (SIAKAD) which supports the management of its college’s data administration. Currently, the SIAKAD UNIDA Gontor’s performance is still far from optimal, mainly because some of its features aren’t user-friendly yet, especially when the SIAKAD UNIDA Gontor accessed from the mobile devices. Therefore, this research aims to implement the MVVM architecture pattern in the SIAKAD UNIDA Gontor mobile application, to increase its user-friendly aspect, especially for Android device users. This research is carried out with Waterfall development method, using Kotlin programming language and utilising Android Jetpack. Results from the app testing with Black Box method show that the application is running well and have no error. Next, results from the questionnaire distributed to the users (students, lecturers and BAAK staffs) show that the application run well and satisfying. From those trial results, show that the implementation of MVVM on SIAKAD UNIDA Gontor Android application has been successful according to the scenario and ready to be applied in the even semester of 2019/2020 campus’ academic year and so on (https://play.google.com/store/apps/details?id=com.amoled.sidago). Further research and development, can be directed to the addition of new features and can support another mobile operating system, such as iOS, Tizen, Harmony OS, etc.","",""
0,"Ted Hagos","Jetpack, LiveData, ViewModel, and Room",2020,"","","","",11,"2023-02-26 08:25:51","","10.1007/978-1-4842-5937-5_16","","",,,,,0,0.00,0,1,3,"","",""
2,"Waseem Sheikh, Nadeem Sheikh","A Model-View-ViewModel (MVVM) Application Framework for Hearing Impairment Diagnosis - Type Dependency Architecture",2019,"","","","",12,"2023-02-26 08:25:51","","10.1109/IETC47856.2020.9249181","","",,,,,2,0.50,1,2,4,"Around 466 million people worldwide (over 5% of the world's population) have disabling hearing loss, and out of these 34 million are children. Estimates suggest that by 2050, over 900 million people worldwide will have disabling hearing loss. The annual global cost of unaddressed hearing loss amounts to US$ 750 billion. Early detection of hearing loss can reduce its impact on an individual's life in addition to saving a huge cost. This paper, the second in a series of three papers, presents the type dependency architecture of an open-source application framework for hearing impairment diagnosis. The framework is built using the Model-View-ViewModel (MVVM) pattern which separates the development of graphical user interface (GUI) from the development of business and back-end logic. Some of the benefits of the MVVM pattern include reusable components, independent development of GUI and business or back-end logic, flexibility to modify GUI without having to change business or back-end logic, ease of unit testing, and reduced maintenance overhead. The proposed framework along with the open-source code makes it possible to easily extend the application functionality thus enabling other researchers and practitioners to develop their own versions of hearing loss diagnosis applications. The proposed software was evaluated by an otolaryngologist and found to be very beneficial in assisting a clinician to reach a hearing impairment diagnosis conclusion more methodically, swiftly and accurately.","",""
0,"Ted Hagos","Lifecycle, ViewModel, LiveData, and Room",2019,"","","","",13,"2023-02-26 08:25:51","","10.1007/978-1-4842-4953-6_11","","",,,,,0,0.00,0,1,4,"","",""
1,"Petr Capek, Erik Kral, R. Šenkeřík","ViewModel Visualization Tool",2016,"","","","",14,"2023-02-26 08:25:51","","10.1109/CSCI.2016.0281","","",,,,,1,0.14,0,3,7,"This article proposes a tool for generating a universal view for ViewModel from Model–View–ViewModel software architectural pattern. In software development processes, it sometimes happens that developers spend a lot of time preparing mockup views for themselves or for quality assurance purposes to provide an option to test implemented features. These mockups are later replaced by a final user interface, so the time spent preparing them is wasted. The aim of this work is to create a tool which will help software engineers to present and test their codes without additional effort.","",""
0,"Patrik Švikruha","Návrhový vzor Model-View-ViewModel ve WPF aplikacích",2016,"","","","",15,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,7,"","",""
0,"David Hedman","Kan applikationer med kartkomponenter konstrueras enligt designmönstret Model-View-Viewmodel? : En fallstudie i vilka problem som uppstår vid implementering av kartkomponenter i applikationer som bygger på tekniken Windows Presentation Foundation och designmönstret Model-View-Viewmodel",2014,"","","","",16,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,9,"In object-oriented programming, established approaches are often used in order to solve problems. One such approach is the Model-View-ViewModel (MVVM) design pattern, which is used to separate the graphical user interface from the underlying logic of an application. It is commonly used in applications based on the technology Windows Presentation Foundation (WPF).In applications where map components are used (software components that display maps to the user) it may be difficult to apply the MVVM design pattern, depending on how the map component is constructed.In this study, three map components are tested in order to evaluate if problems arise in the implementation of these map components in an application based on the technology WPF and the MVVM design pattern. In cases where problems arise, the necessary changes required to solve the problem are also described.The tested map components are TatukGIS, SharpMap and MapSUI. The results of the testing show that none of the map components have a built-in ability to create data bindings between the view and the viewmodel, which is required in order to comply with MVVM. For all map components a possible solution to the problem is implemented and discussed.","",""
0,"Sangita Oswal, Mr. Siddhesh D. Kushte","EFFICIENT GUI DEVELOPMENT USING WINDOWS PRESENTATION FOUNDATION FRAMEWORK AND MODEL-VIEW-VIEWMODEL PATTERN",2014,"","","","",17,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,2,9,"AbstractThe paper focuses on flexible GUI development for trade events viewer. Here we focus on tool for trading system developed using WPF (Windows Presentation Foundation) and MVVM (Model-View-ViewModel) pattern. MVVM architecture is an indirect successor of MVC pattern and it successfully overcome on flaws of latter technique by removing dependency between model and controller by synchronizing View with ViewModel. In Financial Industry, various applications require flexible GUI because market value of financial products continuously changes. This paper explains use of WPF and MVVM pattern in UI development of financial application. The paper focuses on flexible GUI development for trade events viewer. Here we focus on tool for trading system developed using WPF (Windows Presentation Foundation) and MVVM (Model-View-ViewModel) pattern. MVVM architecture is an indirect successor of MVC pattern and it successfully overcome on flaws of latter technique by removing dependency between model and controller by synchronizing View with ViewModel. In Financial Industry, various applications require flexible GUI because market value of financial products continuously changes. This paper explains use of WPF and MVVM pattern in UI development of financial application.","",""
0,"M. Wójtowicz","Wykorzystanie wzorca projektowego Model-View-ViewModel do implementacji aplikacji bazodanowej na przykładzie systemu obsługi kina",2014,"","","","",18,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,9,"","",""
0,"P. Szyszka","Implementacja wzorca architektury Model-View-ViewModel na przykładzie biznesowej aplikacji bazodanowej",2014,"","","","",19,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,9,"","",""
12,"Chris Anderson","The Model-View-ViewModel (MVVM) Design Pattern",2012,"","","","",20,"2023-02-26 08:25:51","","10.1007/978-1-4302-3501-9_13","","",,,,,12,1.09,12,1,11,"","",""
30,"Raffaele Garofalo","Building Enterprise Applications with Windows Presentation Foundation and the Model View ViewModel Pattern",2011,"","","","",21,"2023-02-26 08:25:51","","","","",,,,,30,2.50,30,1,12,"Create rich, flexible, and maintainable line-of-business applications with the MVVM design patternSimplify and improve business application development by applying the MVVM pattern to Windows Presentation Foundation (WPF) and Microsoft Silverlight 4. With this hands-on guide, you'll use MVVM with data binding, commands, and behaviors to create user interfaces loosely coupled to business logic. MVVM is ideal for .NET developers working with WPF and Silverlightwhether or not you have experience building enterprise applications.Discover how to:Dive deep into MVVMand learn how it differs from other UI design patterns Build a simple Customer Relationship Management application you can adapt for your own projects Implement MVVM to maintain separation between UI declarative syntax and presentation logic code Create a Domain Model to define your applications business context Write dynamic code for the data access layer with the Microsoft Entity Framework and NHibernate Enforce complex data-validation scenarios using Windows Workflow Foundation 4 Implement MVVM using frameworks and toolkits such as Microsoft Prism Get code samples on the web For system requirements, see the Introduction.","",""
0,"Ashish Ghoda","Implementing the ViewModel",2012,"","","","",22,"2023-02-26 08:25:51","","10.1007/978-1-4302-4909-2_4","","",,,,,0,0.00,0,1,11,"","",""
0,"Kyle Burns","Starting the ViewModel",2012,"","","","",23,"2023-02-26 08:25:51","","10.1007/978-1-4302-4567-4_10","","",,,,,0,0.00,0,1,11,"","",""
0,"Ashish Ghoda","View, Model, and ViewModel Structures in HTML5 and JavaScript",2012,"","","","",24,"2023-02-26 08:25:51","","10.1007/978-1-4302-4909-2_6","","",,,,,0,0.00,0,1,11,"","",""
0,"Jörg Wegener","Model-View-ViewModel-(MVVM-)Entwurfsmuster",2012,"","","","",25,"2023-02-26 08:25:51","","10.3139/9783446435414.018","","",,,,,0,0.00,0,1,11,"","",""
10,"Fran Jarnjak","Notice of RetractionFlexible GUI in robotics applications using Windows Presentation Foundation framework and Model View ViewModel pattern",2010,"","","","",26,"2023-02-26 08:25:51","","","","",,,,,10,0.77,10,1,13,"This paper examines the needs of custom robotics control software applications that share a commonality but require various operator GUI's and how to accommodate for those changes using power of Windows Presentation Foundation (WPF) framework and Model View ViewModel (MVVM) design pattern as a next step from traditional Model View Controller (MVC) pattern and its derivatives.","",""
11,"G. Hall","Pro WPF and Silverlight MVVM: Effective Application Development with Model-View-ViewModel",2010,"","","","",27,"2023-02-26 08:25:51","","","","",,,,,11,0.85,11,1,13,"WPF and Silverlight are unlike any other user interface (UI) technologies. They have been built to a new paradigm thatif harnessed correctlycan yield unprecedented power and performance. This book shows you how to control that power to produce clean, testable, maintainable code. It is now recognized that any non-trivial WPF or Silverlight application needs be designed around the Model-View-ViewModel (MVVM) design pattern in order to unlock the technology's full data-binding potential. However, the knowledge of how to do this is missing from a large part of the development communityeven amongst those who work with WPF and Silverlight on a daily basis. Too often there is a reliance on programmatic interaction between controls and not enough trust in the technologies' data-binding capabilities. This leads to a clouding of design values and an inevitable loss of performance, scalability, and maintainability throughout the application. Pro WPF and Silverlight MVVM will show you how to arrange your application so that it can grow as much as required in any direction without danger of collapse. What youll learn Understand why the separation of an applications View and its Model is paramount, including the history of Model-View-Presenter and Model-View-Controller. Apply WPF and Silverlights powerful data-binding model correctly. Examine how to organize an applicationtargeting WPF or Silverlight, including unit-testing, source-control, separation of concerns, data serialization, and how to tie everything together with MVVM. Develop afull game development application using MVVM by example. How to serialize the Model without being invasive, how to implement a plug-in architecture that extends both the View and the Model, and how to handle Exceptions gracefully. Who this book is for Developers that wish to learn how to architect WPF or Silverlight applications to ensure maintainability, testability, and separation of concerns. Table of Contents Overview of WPF and Silverlight DataBinding Model-View Separation The ViewModel Events and Commands Validation Unit Testing Data Access Layer Application Support Sample Application","",""
1,"V. Gaudioso","MVVM: Model-View-ViewModel",2010,"","","","",28,"2023-02-26 08:25:51","","10.1007/978-1-4302-2974-2_15","","",,,,,1,0.08,1,1,13,"","",""
39,"Haixu Chen, Tianpeng Wang, Xiaoning He, Xu Cai, Runmao Lin, Jianli Liang, Jian Wu, G. King, Xiaowu Wang","BRAD V3.0: an upgraded Brassicaceae database",2021,"","","","",29,"2023-02-26 08:25:51","","10.1093/nar/gkab1057","","",,,,,39,19.50,4,9,2,"Abstract The Brassicaceae Database (BRAD version 3.0, BRAD V3.0; http://brassicadb.cn) has evolved from the former Brassica Database (BRAD V2.0), and represents an important community portal hosting genome information for multiple Brassica and related Brassicaceae plant species. Since the last update in 2015, the complex genomes of numerous Brassicaceae species have been decoded, accompanied by many omics datasets. To provide an up-to-date service, we report here a major upgrade of the portal. The Model-View-ViewModel (MVVM) framework of BRAD has been re-engineered to enable easy and sustainable maintenance of the database. The collection of genomes has been increased to 26 species, along with optimization of the user interface. Features of the previous version have been retained, with additional new tools for exploring syntenic genes, gene expression and variation data. In the ‘Syntenic Gene @ Subgenome’ module, we added features to view the sequence alignment and phylogenetic relationships of syntenic genes. New modules include ‘MicroSynteny’ for viewing synteny of selected fragment pairs, and ‘Polymorph’ for retrieval of variation data. The updated BRAD provides a substantial expansion of genomic data and a comprehensive improvement of the service available to the Brassicaceae research community.","",""
0,"Amy Wilson, Fadi Wedyan, Safwan Omari","An Empirical Evaluation and Comparison of the Impact of MVVM and MVC GUI Driven Application Architectures on Maintainability and Testability",2022,"","","","",30,"2023-02-26 08:25:51","","10.1109/IDSTA55301.2022.9923083","","",,,,,0,0.00,0,3,1,"Model View Controller (MVC) and Main-View-ViewModel (MVVM) are two similar, but different, architectural frameworks that utilize differing sets of components to produce a graphical user interface driven application. The primary difference between these two architectures resides in MVC’s use of a controller, MVVM’s use of a viewmodel, and how these two components interact with their respective views. These differing usages are factors that effect how tightly coupled their layered systems are and effects the ability to test and maintain systems built using these architectures. This paper seeks to explain both frameworks, evaluate a sample code base, collect metrics, and then compare the testability and maintainability of both architectures.","",""
0,"Sirojiddin Komolov, Gcinizwe Dlamini, Swati Megha, M. Mazzara","Towards Predicting Architectural Design Patterns: A Machine Learning Approach",2022,"","","","",31,"2023-02-26 08:25:51","","10.3390/computers11100151","","",,,,,0,0.00,0,4,1,"Software architecture plays an important role in software development, especially in software quality and maintenance. Understanding the impact of certain architectural patterns on software quality and verification of software requirements has become increasingly difficult with the increasing complexity of codebases in recent years. Researchers over the years have proposed automated approaches based on machine learning. However, there is a lack of benchmark datasets and more accurate machine learning (ML) approaches. This paper presents an ML-based approach for software architecture detection, namely, MVP (Model–View–Presenter) and MVVM (Model–View–ViewModel). Firstly, we present a labeled dataset that consists of 5973 data points retrieved from GitHub. Nine ML methods are applied for detection of software architecture from source code metrics. Using precision, recall, accuracy, and F1 score, the outstanding ML model performance is 83%, 83%, 83%, and 83%, respectively. The ML model’s performance is validated using k-fold validation (k = 5). Our approach outperforms when compared with the state-of-the-art.","",""
0,"Alip Alip, Sandy Kosasi, I. Yuliani, Gusti Syarifudin, David David","Implementasi Arsitektur Model View Controller Pada Website Toko Online",2022,"","","","",32,"2023-02-26 08:25:51","","10.30812/bite.v3i2.1566","","",,,,,0,0.00,0,5,1,"Website merupakan media yang digunakan untuk penyampaian informasi, komunikasi, dan transaksi. Pengembangan website memiliki beberapa arsitektur diantaranya Model View Presenter, Model View ViewModel, Model View Controller dan lain-lain. Website memiliki standar pemrograman yang universal dengan arsitektur MVC dan RESTful API. REST berformat JSON dan menggunakan Json Web Token untuk hak akses, JSON memiliki ukuran kecil dibanding XML. Penelitian ini bertujuan untuk mengatasi kebutuhan yang ada pada Happy Belanja Senakin berupa website yang bisa digunakan sebagai media penjualan, pengelolaan barang dan memonitoring stok barang tanpa harus berada di toko agar lebih terstruktur dan memperluas pangsa pasar dengan memanfaatkan arsitektur MVC dan RESTful API untuk menghubungkan dan mengintegrasikan framework laravel dan framework Vue.Js. Framework laravel digunakan sebagai backend untuk mengelola data produk yang berkaitan dengan data penjualan produk. Framework Vue.Js digunakan sebagai view untuk menampilkan informasi produk kepada pengunjung website maupun user dan digunakan sebagai transaksi penjualan. Penelitian ini menghasilkan website dengan memanfaatkan arsitektur MVC dan RESTful API. Adapun Metode pengembangan menggunakan Extreme Programming serta metode pengujian menggunakan Black Box. Kemudahan pengembangan dimasa mendatang dan kemudahan dalam proses mengelola data produk dan penjualan sehingga pihak Happy Belanja Senakin dapat lebih mudah melakukan input data produk dan memonitoring stok.","",""
1,"Chaima Chekhaba, Hocine Rebatchi, Ghizlane El-Boussaidi, Naouel Moha, Sègla Kpodjedo","Coach: classification-based architectural patterns detection in Android apps",2021,"","","","",33,"2023-02-26 08:25:51","","10.1145/3412841.3442018","","",,,,,1,0.50,0,5,2,"Mobile applications (apps) have become a key feature of modern life, and as such, are expected to be high-quality software products. App developers thus have to consider and apply best practices and design recommendations such as architectural patterns. One of these patterns is the popular MVC (Model View Controller) and its variants: MVP (Model View Presenter) and MVVM (Model View ViewModel). However, there is no common or established strategy that developers can follow when implementing these patterns in their apps. In this context, analyzing existing mobile apps and identifying their implementations of the MVC pattern variants becomes important to understand the current practices in mobile apps. In this paper, we present a classification-based approach to identify MVC-based patterns in Android apps. We provide a dataset of 69 Android apps manually annotated with the applied MVC-based pattern. We validate our approach on 265 open-source Android apps and show that it outperforms the only existing pattern detection tool for all the MVC-based variants.","",""
1,"Nagaki Kentaro, S. Fujita","Browser-Based Manipulation of Virtual Objects Through MVVM Architecture with Data Binding",2021,"","","","",34,"2023-02-26 08:25:51","","10.1109/CANDAR53791.2021.00026","","",,,,,1,0.50,1,2,2,"This paper considers the problem of sharing complex virtual objects among remote users through Web browsers. Although drag-and-drop of object is one of new features available in HTML5, it is not sufficient to realize the transformation of virtual objects consisting of several rigid bodies connected with joints, and for such a purpose, it is necessary to keep track of the location of the fulcrum of the rigid body object currently being grasped, and to set various attributes such as fulcrum and action points for each object, not just the 2D coordinates of the object on the screen. To realize such functionality, we focus on the data binding capability of interactive Web application framework based on the MVVM (Model-View-ViewModel) architecture and implement a prototype system using Vue.js as the concrete framework, Three.js as the library to handle 3D space in the Web browser, and Google Firestore as the database for data sharing among remote users. The result of experiments conducted on the prototype system indicates that we could realize the transformation information sharing within 300 ms on average.","",""
1,"Devany C. Wijaya, Y. Syaifudin, R. Ariyanto, N. Funabiki, M. S. F. Ruslan, Ikhlaashul Mu'aasyiqiin","An Implementation and Evaluation of Basic Data Storage Topic for Content Provider Stage in Android Programming Learning Assistance System",2021,"","","","",35,"2023-02-26 08:25:51","","10.1109/3ICT53449.2021.9581767","","",,,,,1,0.50,0,6,2,"Recently, Android-based smartphones have become the market leader for mobile devices. Thus, the need for Android application developers has increased significantly. Following this trend, many schools and universities set up Android application programming to become the mandatory subject for IT students. In Android applications, utilizing data is necessary to make dynamic and interactive applications. Based on previous studies, the Android Programming Learning Assistance System (APLAS) has been applied as a self-learning platform for Android programming studies. In this paper, we implement the Basic Data Storage learning topic in APLAS as the first topic in the Content Provider stage (second stage). It offers learning materials and assignments for the Model-View-Viewmodel (MVVM) architecture with data binding, the utilization of Shared Preferences, and storing data in internal storage. The results of evaluation through 50 students of an IT department showed that all students have solved all assignments successfully. With the domination of positive comments from them, the effectiveness of this learning topic to support Android programming learning was confirmed.","",""
0,"Andrew Troelsen, Philip Japikse","WPF Notifications, Validations, Commands, and MVVM",2021,"","","","",36,"2023-02-26 08:25:51","","10.1007/978-1-4842-3018-3_28","","",,,,,0,0.00,0,2,2,"","",""
0,"J. Yuan, P. Cao, Yi Yang, Linhang Li, Zhaoliang Liu, Ziheng Zhou, Zhenyu Sun, Xiaohu Wang, Maoyuan Zhao, F. Zhou, Wenwen Zheng, C. Feng, Z. Cao, Xiru Huang, Q. An","Data Acquisition System for Underwater In Situ Gamma Radiation Spectrometer",2021,"","","","",37,"2023-02-26 08:25:51","","10.1109/TNS.2021.3084300","","",,,,,0,0.00,0,15,2,"Radiation measurement at underwater environment helps to get a better understanding on sedimentation, geological structure, radiation monitoring, and so on. However, reports about radiation of natural underwater environment are rare, especially in situ gamma radiation measurement. Two gamma spectrometers are going to be used in underwater in situ radiation measurement. Aiming at different scientific goals, the spectrometers can develop multiple kinds of measurements, including dose and energy spectrum of gamma rays. In this article, a compatible data acquisition (DAQ) system is proposed. The DAQ provides features of readout, visualization, data process algorithm, and file input and output. To benefit from high reusability and low coupling, the Model-View-ViewModel (MVVM) pattern is adopted in the DAQ system. With an application layer protocol based on Modbus, the DAQ can be fully compatible with different spectrometers. Besides supporting of real-time control, the DAQ system also provides a way to program the spectrometers to execute an unmanned mission, so that the spectrometers can load a timetable from a built-in flash memory and run automatically.","",""
0,"G. Lodi","Testing Dynamic SwiftUI Views",2021,"","","","",38,"2023-02-26 08:25:51","","10.1007/978-1-4842-7002-8_7","","",,,,,0,0.00,0,1,2,"","",""
0,"G. Lodi","Testing Static SwiftUI Views",2021,"","","","",39,"2023-02-26 08:25:51","","10.1007/978-1-4842-7002-8_6","","",,,,,0,0.00,0,1,2,"","",""
0,"Zhao, Ge Liu, Xiang, Yang Li, Xiao, han Zhu","full-view scenario model for urban waterlogging response in a big data environment",2021,"","","","",40,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,6,2,"The emergence of big data is breaking the spatial and time limitations of urban waterlogging scenario description. The scenario data of different dimensions (e.g., administrative levels, sectors, granularities, and time) have become highly integrated. Accordingly, a structural and systematic model is needed to represent waterlogging scenarios for more efficient waterlogging response decision-making. In this article, a full-view urban waterlogging scenario is first defined and described from four dimensions. Next a structured representation of scenario element is given based on knowledge unit method. The full-view scenario model is then constructed by extracting the scenario correlation structures between different dimensions (called scenario nesting), i.e., inheritance nesting, feedback nesting, aggregation nesting, and selection nesting. Finally, a real-world case study in Wuhan East Lake High-tech Development Zone, China is evaluated to verify the reasonability of the full-viewmodel. The results show that the proposed model effectively integrates scenario data from different dimensions, which helps generate the complete key scenario information for urban waterlogging decision-making. The full-view scenario model is expected to be applicable for other disasters under big data environment.","",""
4,"Luiza Baumann, Marcia Librelotto, Cristiane Pappis, G. Helfer, Roberta Santos, R. B. Santos, A. B. Costa","NanoMetrix: An app for chemometric analysis from near infrared spectra",2020,"","","","",41,"2023-02-26 08:25:51","","10.1002/cem.3281","","",,,,,4,1.33,1,7,3,"Near‐infrared spectroscopy (NIR) associated with chemometric methods has been widely used in the determination of various compounds, as it is a fast, nondestructive, and analytical method with minimal sample preparation and universal application. In addition, the trend of miniaturization has allowed the development of new portable equipment, increasing the possibilities of point‐of‐use analysis at low cost. In this context, the objective of this study was to develop a portable analytical methodology using a low‐cost DLP NIRscan Nano spectrophotometer (Texas Instruments®) connected to a smartphone for data storage. For this, an app called NanoMetrix was developed, created natively for Android from Android Studio IDE, according to a software design standard known as Model‐View‐ViewModel (MVVM). To demonstrate the applicability of the method, 36 samples of plant tissue were analyzed to determine total nitrogen content. The calibration models were compared to those obtained with the SOLO+MIA software (Eigenvector Research, Inc.), 8.6.1. The results presented root mean square error of calibration (RMSEC) 1.90 and 1.82 g kg−1, root mean square error of prediction (RMSEP) 2.00 and 1.97 g kg−1, and R2pred 0.973 and 0.975, for the NanoMetrix application and the SOLO+MIA software, respectively. Therefore, the results indicate that the NanoMetrix integrated with the portable spectrophotometer, besides the acquisition of spectra, allows the processing of data in the field and reducing the time for the analysis and obtaining the results. Also, the chemometric associated with the NIR spectroscopy is a viable alternative to replace, or complement, the methods used for nitrogen determination.","",""
0,"Wat Wongtanuwat, T. Senivongse","Detection of Violation of MVVM Design Pattern in Objective-C Programs",2020,"","","","",42,"2023-02-26 08:25:51","","10.1145/3411174.3411193","","",,,,,0,0.00,0,2,3,"In object-oriented software development, several design patterns are used to design software to solve different problems. The Model-View-ViewModel or MVVM pattern is a design pattern that can be used to design structure of software which comprises three components. The Model component holds application data. The View component displays visual elements and controls on the screen. The ViewModel component is the intermediary between the Model and View and transforms model information for display on a view. The advantages of this pattern are that there is a clear separation between domain logic in the Model and the display on the View, and tests and maintenance of different components are facilitated. However, there are several developers in a software development team, and not all developers use the MVVM pattern. This makes the code not compliant with the pattern and affects code maintenance. To help developers to revise the code to comply with the MVVM pattern, this paper has studied the MVVM design pattern, summarized principles of the pattern, and proposed the criteria to detect pattern violation in Objective-C code. An automated tool has been developed to detect MVVM violation and report violation locations in the code so that developers can revise the code to follow the pattern. An experiment shows that the tool performs satisfactorily in pattern violation detection, compared with manual detection, with the precision of 0.81, recall of 0.77, and F1 of 0.79.","",""
4,"F. Sholichin, M. A. Isa, S. A. Halim, Muhammad, Firdaus Harun","REVIEW OF IOS ARCHITECTURAL PATTERN FOR TESTABILITY, MODIFIABILITY, AND PERFORMANCE QUALITY",2019,"","","","",43,"2023-02-26 08:25:51","","","","",,,,,4,1.00,1,5,4,"In the mobile development especially in iOS, a correct selection of architecture patterns is crucial. Many architectural patterns used by developers such as Model View Controller (MVC), Model View Presenter (MVP), Model View ViewModel (MVVM), and View Interactor Presenter Entity Router (VIPER) have promised stability of the product. Nowadays, most developers tend to use MVC architectural pattern as this pattern is easy to use and separate the logic between model, view and controller. However, this architecture has common problems which are hard to test and manage the code because all the codes for business application are placed in controller components. Therefore, this paper reviewed some of the existing architectural patterns qualities specifically in testability, modifiability and performance quality in order to investigate the mentioned problems. By using Contact mobile apps as a case study, the results show the MVVM architecture is good for testability, modifiability (cohesion level procedural), and performance (memory consumption). In addition, VIPER is the best in modifiability (coupling level data and coupling level message) and performance of CPU.","",""
8,"Mariam Aljamea, Mohammad A. Alkandari","MMVMi : A Validation Model for MVC and MVVM Design Patterns in iOS Applications",2018,"","","","",44,"2023-02-26 08:25:51","","","","",,,,,8,1.60,4,2,5,"Design patterns have gained popularity as they provide strategies for solving specific problems. This paper explores two common design patterns in iOS development field: Model View Controller (MVC) and Model View ViewModel (MVVM) design patterns. The paper investigates the problems with MVC design pattern. Then, it introduces a validation model that detects MVC problems, and helps programmers make the decision to switch between MVC and MVVM design pattern. The proposed validation model consists of two phases: phase one is to detect MVC problems, and phase two is to validate the relation between MVVM objects. The model was then applied to a Cloudy app as a case study. As a result, the model was able to detect MVC problems. The relation between MVVM objects was also validated. Further, this research provided some recommended solutions to satisfy the relations between MVVM objects in the project.","",""
21,"D. Hermes","Xamarin Mobile Application Development: Cross-Platform C# and Xamarin. Forms Fundamentals",2015,"","","","",45,"2023-02-26 08:25:51","","","","",,,,,21,2.63,21,1,8,"Xamarin Mobile Application Development is a hands-on Xamarin. Forms primer and a cross-platform reference for building native Android, iOS, and Windows Phone apps using C# and .NET. This book explains how to use Xamarin. Forms, Xamarin. Android, and Xamarin.iOS to build business apps for your customers and consumer apps for Google Play and the iTunes App Store. Learn how to leverage Xamarin. Forms for cross-platform development using the most common UI pages, layouts, views, controls, and design patterns. Combine these with platform-specific UI to craft a visually stunning and highly interactive mobile user experience. Use Xamarin. Forms to data bind your UI to both data models and to view models for a Model-View-ViewModel (MVVM) implementation. Use this book to answer the important question: Is Xamarin. Forms right for my project? Platform-specific UI is a key concept in cross-platform development, and Xamarin. Android and Xamarin.iOS are the foundation of the Xamarin platform. Xamarin Mobile Application Development will cover how to build an Android app using Xamarin. Android and an iOS app using Xamarin.iOS while sharing a core code library. SQLite is the database-of-choice for many Xamarin developers. This book will explain local data access techniques using SQLite.NET and ADO.NET. Build a mobile data access layer (DAL) using SQLite and weigh your options for web services and enterprise cloud data solutions. This book will show how organize your Xamarin code into a professional-grade application architecture. Explore solution-building techniques from starter-to-enterprise to help you decouple your functional layers, manage your platform-specific code, and share your cross-platform classes for code reuse, testability, and maintainability. Also included are 250+ screenshots on iOS, Android, and Windows Phone and 200+ C# code examples with downloadable C# and XAML versions available from Apress.com. This comprehensive recipe and reference book addresses one of the most important and vexing problems in the software industry today: How do we effectively design and develop cross-platform mobile applications? What youll learn How to build world-class mobile apps for iOS, Android, and Windows Phone using C#How to organize your Xamarin code into a professional-grade application architecture The latest Xamarin techniques for cross-platform UI using Xamarin. Forms When and how to use platform-specific UIData binding, local data access, enterprise cloud data solutions, and building a data access layer for mobile appsCross-platform architecture to maximize portability and code reuse Who this book is for C#, ASP.NET developers, architects, and technical managers as well as many Android and iOS developers","",""
0,"Tomáš Křičenský","Android aplikace pro správu úkolů",2019,"","","","",46,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,4,"This Bachelor's thesis deals with the development of a task management application for Android operating system. The application can be used on multiple devices thanks to synchronisation with a remote database. The theoretical part is focused on the principles of Android application development, modern technologies such as RxJava and Kotlin, and architectural pattern Model-View-ViewModel. The practical section then describes the complete application and offers an in-depth description of the application screens.","",""
2,"Kyung-Min Seo, Kwang-Phil Park","Interface Data Modeling to Detect and Diagnose Intersystem Faults for Designing and Integrating System of Systems",2018,"","","","",47,"2023-02-26 08:25:51","","10.1155/2018/7081501","","",,,,,2,0.40,1,2,5,"In system of systems engineering, system integrators are in charge of compatible and reliable interfaces between subsystems. This study explains a systematic solution to identify and diagnose interface faults during designing and integrating systems of systems. Because the systems targeted in this study are real underwater vessels, we first have anatomized 188 interface data transferred between 22 subsystems of them. Based on this, two interface data models are proposed, which include data sets regarding messages and inner fields and transition and decision functions for them. Specifically, a structure model at the message level evaluates how inner fields belong to a message, and a logic model at the field level assesses how each field is interpreted and if the interpreted value is understandable. The software that supports the modeling is implemented using the following concepts: (1) a model-view-viewmodel pattern for overall software design and (2) a computer network for representing sequential properties of field interpretations. The proposed modeling and software facilitate diagnostic decisions by checking the consistency between interface protocols and obtained real data. As a practical use, the proposed work was applied to an underwater shipbuilding project. Within 10 interfaces, 14 fault cases were identified and diagnosed. They were gradually resolved during the system design and integration phases, which formed the basis of successful submarine construction.","",""
1,"A. B. Cortès","Desenvolupament d'una app per a Android de la cartellera de cinema en català utilitzant MVVM i Android Architecture Components",2018,"","","","",48,"2023-02-26 08:25:51","","","","",,,,,1,0.20,1,1,5,"El projecte preten desenvolupar una aplicacio per a Android fent emfasi en dissenyar una bona arquitectura interna utilitzant Model-View-ViewModel i les llibreries d'Android Architecture Components. L'app Muvicat mostra la cartellera de cinema en catala gracies a dades obertes de la Generalitat.","",""
0,"Marko Novina","Napredni arhitekturni koncepti za platformu Android",2018,"","","","",49,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,5,"The goal of this paper is to demonstrate Android arhitecture components on Android aplication for managing recipes. The paper explains what are arhitecture patterns in general and on what are Android arhitecture components based. It also explains how they are implemented and used in mobile application developed in scope of the paper. Basic parts of Android arhitecture components, such as ViewModel, Lifecycle and LiveData classes are explained in details. Firebase platform, which is used by application to store data is also explained as part of the paper. Finally, a conclusion is made based on the advantages and disadvantages of Android arhitecture components discovered while application was developed.","",""
0,"M. Gehlot, Mukul Karamchandani","Introduction, evolution, data binding & programming of Advanced Model View Controller (MVC) technology - Model-View-View-Model (MVVM) with ASP.NET 4.5 and above versions",2018,"","","","",50,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,2,5,"My objective of presenting this topic is making aware to programmers with this technology. It is still not accepted by programmers as expected. Still maximum programmers are working with WPF and MVC. Now it’s time to work with MVVM. MVVM is advanced ASP.NET technology in which we discuss MVVM pattern and describes how to implement its fundamental characteristics. It is a part of smart web based programming. MVVM scenario is implemented using Prism Library. The MVVM pattern is a close variant of the Presentation Model pattern, optimized to leverage some of the core capabilities of WPF and Silverlight, such as data binding, data templates, commands, and behaviors. It is more reliable MVC (Model View Controller) with more advanced features that takes advantage of particular strengths of the Windows Presentation Foundation (WPF) architecture to separate the Model and the View by introducing an abstract layer between them a “Model of the View,” or ViewModel. In this paper we will discuss brief introduction, features, data binding, and programming of MVVM. Introduction MVVM Foundation is a library of classes that are very useful when building applications based on the ModelView-ViewModel philosophy. The library is small and concentrated on providing only the most indispensable tools needed by most MVVM application developers. ModelView-ViewModel is a way of creating client applications that leverages core features of the WPF platform, allows for simple unit testing of application functionality, and helps developers and designers work together with less technical difficulties. The classes in the MVVM Foundation are timetested tools in the toolbox of many WPF developers around the world. Now they all live in one convenient project. MvvmFoundation. The source code download also contains a set of unit tests and a demo application, which show how to use the classes. WPF lends itself toward MVVM which increase testability, flexibility and maintainability. The Model-View-ViewModel pattern helps us to cleanly separate the business and presentation logic of our application from its user interface (UI). Maintaining a clean separation between application logic and UI helps to address numerous development and design issues and can make our application much easier to test, maintain, and evolve. It can also greatly improve code re-use opportunities and allows developers and UI designers to more easily collaborate when developing their respective parts of the application. Using the MVVM pattern, the UI of the application and the underlying presentation and business logic is separated into three separate classes: the view, which encapsulates the UI and UI logic; the view model, which encapsulates presentation logic and state; and the model, which encapsulates the application's business logic and data. Prism includes samples and reference implementations that show how to implement the MVVM pattern in a Silverlight or Windows Presentation Foundation (WPF) application. The Prism Library also provides features that can help we implement the pattern in were own applications. These features embody the most common practices for implementing the MVVM pattern and are designed to support testability and to work well with Expression Blend and Visual Studio. The pattern was first introduced by John Gossman – the architect on the Blend/WPF/Silverlight team – and derives from the Smalltalk ApplicationModel pattern, as does the PresentationModel pattern described by Martin Fowler. It was first utilized by the Expression team (John was part of that team at the time) as they developed version 1 of Expression Blend. Without the WPF/Silverlight-specific 127 International Journal of Engineering Research & Technology (IJERT)","",""
0,"Jesse Liberty, J. Galloway, Philip Japikse, Jonathan Hartwell","Building Your First Windows 10 UWP App",2018,"","","","",51,"2023-02-26 08:25:51","","10.1007/978-1-4842-2934-7_2","","",,,,,0,0.00,0,4,5,"","",""
2,"Haiyuan Sun, Jianping Zhang, Guiling Sun, Yangyang Li","Agricultural Traceable and Marketing System Based on iOS-Platform and Wireless Sensor Network",2017,"","","","",52,"2023-02-26 08:25:51","","10.4236/JCC.2017.56003","","",,,,,2,0.33,1,4,6,"With the rapid development of Things of Internet and its related technologies such as Wireless Sensor Network and remote access system development, its application on agricultural and farming domain has become a new research direction. This paper discusses a practical and efficient system by applying mobile software development technologies and ZigBee communication network. To achieve a compact and flexible iOS-based client, this study takes advantage of Model-View-ViewModel pattern as well as Client/Server style. Several encryption technologies such as Message Digest algorithm and Rivest Shamir Adleman algorithm are combined to ensure information security. Compared to the common portable marketing system, the proposed system also provides accurate growth information which is collected by wireless sensor network, and proposes a more flexible design pattern for mobile client hence obtaining a better performance on iOS devices.","",""
2,"John Kouraklis","Two-Way Communication",2016,"","","","",53,"2023-02-26 08:25:51","","10.1007/978-1-4842-2214-0_4","","",,,,,2,0.29,2,1,7,"","",""
0,"Konstantinos Zarifis","In-depth Survey of MVVM Web Application Frameworks",2017,"","","","",54,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,6,"Frameworks that adopt the Model-View-Controller (MVC) design pattern have been extensively used in the web community for the development of fully-fledged web applications. Such frameworks enable efficient incremental updates on the application’s state and visual layer, but they usually enforce the extended use of imperative logic in order to accomplish this effect. As an application is extended with additional functionality, the development process soon becomes extremely arduous and error-prone. This has lead to the emergence of Model-View-ViewModel (MVVM) and Web Component libraries that achieve higher developer productivity by keeping the required source code minimal and well-organized. Such frameworks can also provide additional mechanisms that automatically maintain the application state and the respective visual layer in sync, thus alleviating the application developer from this task. On the downside such mechanisms can negatively impact the performance of a given application and cause noticeable irregularities to the user experience. This research exam surveys MVVM and Web Component libraries that constitute the state-of-the-art in the web community. It also provides accurate definitions of the modules that compose an MVVM and a Component library and contains detailed description of the internal workings of each individual framework. Furthermore, this survey focuses on the mechanisms that are employed by MVVM and Component libraries to propagate changes from the application state to the respective part of the visual layer and describes the advantages and disadvantages of each individual mechanism. Lastly, we introduce FORWARD and its respective mechanisms that accomplish change propagation in an asymptotically more efficient manner than the respective mechanisms employed by competing frameworks.","",""
0,"Konstantinos Zarifis, Yannis Katsis, Y. Papakonstantinou","Application View Maintenance : Optimizing Change Propagation in Mobile Applications",2017,"","","","",55,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,3,6,"Web Frameworks that adopt the Model-View-ViewModel (MVVM) design pattern have been extensively used in the web community for the development of fully-fledged applications. Such frameworks, typically, provide algorithms that automate the maintenance of the application’s view when mutations occur to the underlying data (also known as model). The automation of this process, commonly referred to as Application View Maintenance (AVM), significantly improves developer productivity, since it alleviates the developer from manually performing this task. Such algorithms are also capable of mutating individual parts of the view when the underlying data mutate, thus avoiding a full reload and rerendering of the entire application view, (a very expensive operation for HTML content, especially in the mobile setting). However, as we show in this work, AVM algorithms of existing MVVM frameworks are still suboptimal performance-wise. By continuously exploring the model for mutations, they have a complexity that is proportional to the size of the model and not to the size of mutations. This suboptimality combined with the low computational power of mobile devices, can lead to severely inefficient mobile apps, which can also impact the user experience. To address this issue, we propose a novel AVM algorithm which uses existing incremental view maintenance techniques, to directly identify the mutated parts of the model and infer the respective parts of the view that need to be updated, while avoiding a blowup in complexity proportional to the size of the model of the application. The complexity and memory consumption of the proposed algorithm are shown to be typically significantly lower than existing approaches.","",""
1,"S. Jiang, S. Dolly, B. Cai, S. Mutic, H. Li","SU-F-J-72: A Clinical Usable Integrated Contouring Quality Evaluation Software for Radiotherapy.",2016,"","","","",56,"2023-02-26 08:25:51","","10.1118/1.4955980","","",,,,,1,0.14,0,5,7,"PURPOSE To introduce the Auto Contour Evaluation (ACE) software, which is the clinical usable, user friendly, efficient and all-in-one toolbox for automatically identify common contouring errors in radiotherapy treatment planning using supervised machine learning techniques.   METHODS ACE is developed with C# using Microsoft .Net framework and Windows Presentation Foundation (WPF) for elegant GUI design and smooth GUI transition animations through the integration of graphics engines and high dots per inch (DPI) settings on modern high resolution monitors. The industrial standard software design pattern, Model-View-ViewModel (MVVM) pattern, is chosen to be the major architecture of ACE for neat coding structure, deep modularization, easy maintainability and seamless communication with other clinical software. ACE consists of 1) a patient data importing module integrated with clinical patient database server, 2) a 2D DICOM image and RT structure simultaneously displaying module, 3) a 3D RT structure visualization module using Visualization Toolkit or VTK library and 4) a contour evaluation module using supervised pattern recognition algorithms to detect contouring errors and display detection results. ACE relies on supervised learning algorithms to handle all image processing and data processing jobs. Implementations of related algorithms are powered by Accord.Net scientific computing library for better efficiency and effectiveness.   RESULTS ACE can take patient's CT images and RT structures from commercial treatment planning software via direct user input or from patients' database. All functionalities including 2D and 3D image visualization and RT contours error detection have been demonstrated with real clinical patient cases.   CONCLUSION ACE implements supervised learning algorithms and combines image processing and graphical visualization modules for RT contours verification. ACE has great potential for automated radiotherapy contouring quality verification. Structured with MVVM pattern, it is highly maintainable and extensible, and support smooth connections with other clinical software tools.","",""
0,"M. Irshad","IJPRES 3 D Object Retrieval Approach for Better Perception Using View-Model Combination",2016,"","","","",57,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,7,"Digital image processing and its associated technological development came long way to perceive the digital content in 3-dimensional (3D) from two-dimensional (2D). Although 3D representation of digital content has introduced digitalization in all digital image processing associated fields but finding the relevancy between 3D objects is still concerned area and extensive research must be done to achieve relevant relevancy between 3D objects. In literature, vast amount of algorithms are proposed based on model-based approach or view-based approach which results in inaccurate data for 3D representation of digital content. In this work, collaboration of both viewmodel relevance among 3D objects for retrieval and 3D objects perception is performed based on various graph structures. Object hypergraph structure (view information) is implemented at initial stage to perceive the 3D objects in multiple views and an object graph is constructed for model data for obtaining the information about the relationship between the different features of the obtained 3D objects. The proposed method registers good performance and reliability over traditional state of art methods and experiments are conducted on two data sets respectively.","",""
0,"Mario Mikić","Potpuna izrada sustava za evaluaciju kolegija",2016,"","","","",58,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,7,"U ovom radu obrađen je potpuni proces izrade web aplikacije za evaluaciju kvalitete kolegija. Za izradu aplikacija koristen je niz tehnologija, razvojnih okvira i alata uz koje je pojasnjena njihova uporaba i generalna funkcija. Za razvoj korisnickog sucelja koristen je Javascript Vue.js razvojni okvir te Model-View-ViewModel paradigma, dok je u administratorskom sucelju i serverskoj logici aplikacije koristen PHP i Laravel razvojni okvir, te ucestala Model-View-Controller paradigma. Osim osnovne logike iza aplikacije obrađen je i kratak povijesni pregled spomenutih tehnologija, a i niz dodatnih cesto koristenih alata u danasnjem standardnom razvojnom okruženju.","",""
0,"John Kouraklis","MVVM as Design Philosophy",2016,"","","","",59,"2023-02-26 08:25:51","","10.1007/978-1-4842-2214-0_3","","",,,,,0,0.00,0,1,7,"","",""
0,"Caamaño Espinoza, J. Pablo.","Aplicación de ESPOL para Windows y Windows Mobile",2016,"","","","",60,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,2,7,"Movilizar a tantos estudiantes que tiene la ESPOL se torta un poco inconodo, debido a que los buses de Transespol no se dan abasto para satisfacer la demanda existente, por lo que se necesita implementar un mecanismo complementario de transporte. Una forma de ayudar a la movilizacion de los estudiantes es incentivar a que aquellos que poseen un vehiculo lleven a los que no poseen.  Por medio de una aplicacion se busca que los estudiantes conozcan mejor las rutas disponibles para optimizar su uso, ademas por medio de la aplicacion fomentar la movilizacion entre estudiantes, es decir que estudiantes que tengan lugares disponibles en sus vehiculos los oferten a estudiantes que deseen llegar al campus de la ESPOL. El patron usado para el desarrollo de la aplicacion es model View ViewModel, que tiene entre sus principales beneficios, la facilidad para ampliar a otras plataformas las aplicaciones desarrolladas utilizando MVVM.","",""
0,"Slaven Olujić","IZRADA WINDOWS PHONE 8 APLIKACIJE KORIŠTENJEM MVVM OBRASCA",2015,"","","","",61,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,8,"Ovaj rad bavi se sa razvojem Windows Phone 8 aplikacije za prikaz poslovnih događaja koristenjem Model-View-ViewModel obrasca. Cilj ovog rada je upo","",""
0,"Andrew Troelsen, Philip Japikse","Notifications, Commands, Validation, and MVVM",2015,"","","","",62,"2023-02-26 08:25:51","","10.1007/978-1-4842-1332-2_30","","",,,,,0,0.00,0,2,8,"","",""
0,"Mozhan Soltani, Retta Shiferaw Siyoum","Evaluating Domain-Driven Architectural Designs and Non-Functional Architectural Attributes for Windows Phone 8 Mobile Applications",2015,"","","","",63,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,2,8,"Most IT companies are interested in investigating new mobile technologies as mobile devices are noticeably prevalent these days. In this study, we collaborated with Volvo IT to identify the extent of conformance to domain-driven architectures when developing Windows Phone 8 (WP8) applications, as well as to find out what non-functional attributes can be applied to these applications. We took the Action Design Research (ADR) strategy to develop a purchasing order system prototype and investigate the applicability of security, performance, and maintainability to Windows Phone 8 applications. We found that while the Model-View-ViewModel (MVVM) pattern brings high maintainability to WP8 applications, these applications can still conform to a domain-driven architecture with, at least, the user interface, domain, communication, and service components, and fulfill high levels of security as well as performance. Due to the limited time frame of the study, we did not consider other non-functional attributes, such as integrability, robustness, and simplicity, for WP8 applications. Those attributes can be investigated in future research.","",""
0,"B. James, Lori Lalonde","Pro XAML with C#",2015,"","","","",64,"2023-02-26 08:25:51","","10.1007/978-1-4302-6775-1","","",,,,,0,0.00,0,2,8,"","",""
0,"J. Reed","An Object-Oriented Interface for Telemetry and Control of a Mars Rover",2015,"","","","",65,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,8,"An application has been developed to remotely control a vehicle and display telemetry returned by the vehicle through a graphical user interface. The vehicle will compete in the University Rover Challenge hosted by the Mars Society. The software is responsible for asynchronously communicating to the remote system with a custom protocol over a wireless TCP/IP connection, handling user input from a team of human controllers, and processing data received from the rover and displaying it on the screen. A strong emphasis was put on keeping an object-oriented design throughout the project. It is built around the Model-View-ViewModel design pattern. The software was constructed using the C# and XAML languages with the Microsoft .NET framework.","",""
1,"H. Sánchez, J. J. Escobar, J. D. González, J. R. Beltrán","Implementation of interactive virtual simulation of physical systems",2014,"","","","",66,"2023-02-26 08:25:51","","10.1088/1742-6596/490/1/012100","","",,,,,1,0.11,0,4,9,"Considering the limited availability of laboratories for physics teaching and the difficulties this causes in the learning of school students in Santa Marta Colombia, we have developed software in order to generate greater student interaction with the phenomena physical and improve their understanding. Thereby, this system has been proposed in an architecture Model/View- View- Model (MVVM), sharing the benefits of MVC. Basically, this pattern consists of 3 parts: The Model, that is responsible for business logic related. The View, which is the part with which we are most familiar and the user sees. Its role is to display data to the user and allowing manipulation of the data of the application. The ViewModel, which is the middle part of the Model and the View (analogous to the Controller in the MVC pattern), as well as being responsible for implementing the behavior of the view to respond to user actions and expose data model in a way that is easy to use links to data in the view. .NET Framework 4.0 and editing package Silverlight 4 and 5 are the main requirements needed for the deployment of physical simulations that are hosted in the web application and a web browser (Internet Explorer, Mozilla Firefox or Chrome). The implementation of this innovative application in educational institutions has shown that students improved their contextualization of physical phenomena.","",""
1,"G. Fink, I. Flatow","SPA Concepts and Architecture",2014,"","","","",67,"2023-02-26 08:25:51","","10.1007/978-1-4302-6674-7_4","","",,,,,1,0.11,1,2,9,"","",""
0,"Jesse Liberty, Philip Japikse, J. Galloway","Building Your First Windows 8 App",2014,"","","","",68,"2023-02-26 08:25:51","","10.1007/978-1-4302-4048-8_2","","",,,,,0,0.00,0,3,9,"","",""
0,"Harry Atwal, Brittany Morago, J. Gebauer","Annals of the University of North Carolina Wilmington Master of Science in Computer Science and Information Systems",2014,"","","","",69,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,3,9,"...............................................................................................................................1 Chapter 1: Introduction ........................................................................................................2 Chapter 2: Background ........................................................................................................3 2.1. Uni-SPIRE ........................................................................................................3 2.2. The Universal Writing Continuum ...................................................................6 2.3. Previous Development ......................................................................................7 2.4. Current Development ........................................................................................9 2.5. Recommended Enhancements ..........................................................................9 Chapter 3: Deliverables......................................................................................................12 3.1. Declaration of Scope .......................................................................................12 3.2. Software Development....................................................................................17 3.3. Infrastructure Improvements ...........................................................................19 3.4. Systems Analysis ............................................................................................21 3.5. Project Management .......................................................................................23 3.6. Intended Project Plan ......................................................................................23 Chapter 4: Tasks Completed ..............................................................................................25 4.1. Software Development....................................................................................25 4.1.1. Implementation Methodology ....................................................................25 4.1.2. Completed Software Development Deliverables .......................................29 4.2. Infrastructure Improvements ...........................................................................33 4.3. Systems Analysis ............................................................................................34 4.3.1. Schema Enhancements...............................................................................34 4.3.2. Future Development...................................................................................38 4.4. Project Management .......................................................................................38 Chapter 5: Conclusion........................................................................................................43 References ..........................................................................................................................44 Appendices A: MVC Pattern .....................................................................................................45 B: MVC Pattern with ViewModel .........................................................................45 C: File-Level Organization for Models..................................................................46 D: Data-Access-Layer Manager Pattern Diagram .................................................47 E: LoginModel Class Diagram ..............................................................................48 F: Developer Workflow: Version Control .............................................................49 G: Developer Workflow: Task Management .........................................................50 H: Future Development Example – ERD ..............................................................51 I: Future Development Example – Use Case Diagram ..........................................52 J: Evaluation Process Activity Diagram ................................................................53 K: Database Schema Alteration Example ..............................................................54 L: Azure Database Limitations Investigation ........................................................56 M: User Interface Comparisons .............................................................................59 N: Enhancement Types by Layer ...........................................................................62 O: Reporting Features Use Case Diagram .............................................................63","",""
0,"M. Privat, Robert Warner","Integrating with the User Interface",2014,"","","","",70,"2023-02-26 08:25:51","","10.1007/978-1-4302-6029-5_5","","",,,,,0,0.00,0,2,9,"","",""
0,"K. Dorn","System zur anzeige und bearbeitung von daten einer medizinischen einrichtung",2014,"","","","",71,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,9,"Es wird ein System (1) zur Anzeige und Bearbeitung von Daten einer medizinischen Einrichtung (2, 2') angegeben. Das System (1) umfasst mindestens eine Viewing-Applikation (34) zum Ablauf auf einem Nutzergerat (8, 9, 11, 12), die zum Anzeigen von in einem Cloud Storage (19) einer Public Cloud (13) vorgehaltenen medizinischen Bilddatensatzen (B) eingerichtet ist. Die Viewing-Applikation (34) umfasst hinsichtlich ihrer Komponenten-Architektur eine View-Schicht (52), eine ViewModel-Schicht (55), eine Model-Schicht (57) und eine Treiberschicht (59). Die ViewModel-Schicht (55) ist hierbei generisch in dem Sinne gestaltet, dass sie ein gemeinsames Set von Funktionen fur die Anzeige und Bearbeitung von 2D-Bilddaten und 3D-Bilddaten definiert.","",""
0,"Nico Vermeir","Building a First Project",2013,"","","","",72,"2023-02-26 08:25:51","","10.1007/978-1-4302-5066-1_3","","",,,,,0,0.00,0,1,10,"","",""
2,"Soni St, Pranali Dhete, S. Patil","Industrial Automation using Windows Presentation Foundation & Model View View- Model Pattern",2012,"","","","",73,"2023-02-26 08:25:51","","","","",,,,,2,0.18,1,3,11,"The paper focuses on flexible GUI development for industrial tool automation. Here we focus on tool for CNC machine automation developed using WPF (Windows Presentation Foundation) & MVVM (Model View View-Model) Pattern. The scheme allows flexible development of tool, better management of business intelligence and parallel code development without overlapping of concepts. The paper also considers the custom software tool development by multiple operators that share a commonality. MVVM architecture is an indirect successor of MVC pattern and it has successfully churned out the flaws of latter technique by removing dependency between model and controller by synchronizing View with ViewModel(1). The main advantage now available is that parallel development & execution can be supported because ViewModel always has the status of View available with it. Industrial tool development often requires time and multiple developers for timely completion of project, and the approach suggested here is able to achieve the goal desired. Index Terms—Industrial Automation, CNC Tool, WPF, MVVM, Parallel development, Flexible GUI development","",""
6,"H. Pan, J. Jiang, Lin Chen, Honghui Sun, Hua Qin Tan","A Scalable Graphics User Interface Architecture for CNC Application Based - on WPF and MVVM",2011,"","","","",74,"2023-02-26 08:25:51","","10.4028/www.scientific.net/AMR.317-319.1931","","",,,,,6,0.50,1,5,12,"A scalable Graphics User Interface Architecture for open Computer Numerical Control (GUIAC) application is presented in this paper. The GUIAC is based on Windows Presentation Foundation (WPF) and Model-View-ViewModel (MVVM) design pattern. The WPF and MVVM pattern are used to decouple the User Interface (UI) presentation and business logic. This method makes the CNC application UI presentation design and the CNC application logic implementation work in parallel for improving the development and maintenance efficiency. Using the extensible application markup language can reduce the UI presentation design workload. The GUIAC has a loosely coupled structure with three layers. The experiment results of developing the CNC application using GUIAC show that the application graphics user interface is scalable and maintained easily.","",""
0,"Kyle Burns","The Role of Service Agents",2012,"","","","",75,"2023-02-26 08:25:51","","10.1007/978-1-4302-4567-4_12","","",,,,,0,0.00,0,1,11,"","",""
0,"Pan Pan Sophoana","UNDERWATER DATA COMMUNICATION PACKAGE",2012,"","","","",76,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,11,"This project concentrates on simplified and innovated technology to develop an  efficient software package for Underwater Acoustic (UWA) communication nfrich  helps researcher to have better understanding of the behavior of undemmter acoustic  network, to cater for the UTP in-house research needs and to set up the relevant basic  underwater acoustic communication laboratory based testbed. The existing  simulation tool, particularly NS2 can give reseanchers some bosic uderstanding of  underwater network, and this requires certain level of knowledge in C++, TCL and  most importantly understating the infrastnrcture of the simulation Howwer,  researchers will find out that they are not able to simularc the real underurer  environment. This project would tackle problems existed in softunare development by  utilizing Windows Foundation Presentation Technology and Model View  ViewModel architecture which is an architectrral pat&ern mostly used in softnnare  engineering that originated frrom Microsoft. The author believes that this softu/arc  package will enable students/ reseachers to pcrform their studies and testing in areal  lab based environment with a minimum amount of effort","",""
0,"Kyle Burns","Mocking the Service Agent",2012,"","","","",77,"2023-02-26 08:25:51","","10.1007/978-1-4302-4567-4_14","","",,,,,0,0.00,0,1,11,"","",""
0,"Kyle Burns","Completing the Service Agent",2012,"","","","",78,"2023-02-26 08:25:51","","10.1007/978-1-4302-4567-4_16","","",,,,,0,0.00,0,1,11,"","",""
0,"Ashish Ghoda","Implementing the Model",2012,"","","","",79,"2023-02-26 08:25:51","","10.1007/978-1-4302-4909-2_3","","",,,,,0,0.00,0,1,11,"","",""
4,"Chris Anderson","Pro Business Applications with Silverlight 5",2010,"","","","",80,"2023-02-26 08:25:51","","10.1007/978-1-4302-3501-9","","",,,,,4,0.31,4,1,13,"","",""
0,"S. Kshirsagar, Geoffrey A. Davis, Benjamin Bedinghaus, J. Uber, R. Males","NetSafe-Enhanced Water Distribution Network Safety through Predictive Simulation Software",2011,"","","","",81,"2023-02-26 08:25:51","","10.1061/41203(425)53","","",,,,,0,0.00,0,5,12,"The development of NetSafe –a network simulation software for predictive simulation of the fate and transport of chemical and biological agents in drinking water distribution systems (DWDS)-is described in this paper. Using real-time hydraulic and water quality measurements and run-time models, NetSafe is capable of identifying the presence of contaminants and predicting their sources and destinations in DWDS for vulnerability analysis and optimal emergency response. NetSafe uses a model-based anomaly detection approach that can be used with any type of sensor. The contaminant source identification leverages the Contaminant Status Algorithm (CSA), and the contaminant spread is determined using the EPANET MSX engine. NetSafe has been developed as .NET application written in C#. It is based on a robust design pattern called “Model-View-ViewModel (MVVM)” that permits scalability as well as flexibility. The user interface can be completely defined using an XML like syntax called the eXtensible Application Markup Language (XAML). NetSafe has the ability to connect to relational databases to obtain SCADA data, and it has been tested with both Microsoft SQL Server 2005 and Microsoft Access 2003. The results displayed by NetSafe were independently verified using an Excel-based workbench. The architecture evolved through the creation of use case diagram, class diagram, communication diagram, sequence diagram, state activity diagram. These capabilities of NetSafe were tested using “Network 3” from the EPANET sample data and multispecies water quality kinetics, and the initial results appear to be promising. The next phase of research will compare NetSafe with existing approaches using real-life networks.","",""
0,"Graeme Baillie, Dave Allan, Brian Armour, R. Milne, Thomas M. Connolly, R. Beeby","Performance Analysis of a Model-View-DynamicViewModel Design Pattern",2011,"","","","",82,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,6,12,"The implementation of an appropriate software archi te ture is crucial in achieving the optimum performance fro m a system. Web-based applications are becoming increas ingly popular in replacing previous Windows-based applica tions. This has lead to a growth in new technologies and a rchitectures to cope with the new workload and performance deman ds that web-based applications can require. This paper will look at a current software company that provides process-heavy web-based application system s providing grant management services to medical and aca emic research. The purpose of this paper is to analyze t he performance of their existing Web Forms based manag ement system against a newly developed dynamic componentbased architecture using a variant of the Model View Cont r ller (MVC) and Model-View-ViewModel (MVVM) patterns, which we have termed MVDVM (Model-ViewDynamicViewModel). Accurate and meaningful results will demonstrate how applications can now benefit from t his approach.","",""
0,"Mohamed Ba","Dynamic Document Creation in Windows Phone 7",2011,"","","","",83,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,12,"Ausgangslage  Der Firmenpartner ist Hersteller eines Zusatzsoftware-Produkts zu Microsoft Office (www.idfix.ch), womit Kunden in allen Branchen als Alternative zu selbstprogrammierten Office-Templates auf effiziente Art Geschaftsdokumente und Emails in perfektem Corporate Identity erzeugen konnen. Dazu gehort auch das Erstellen von formatierten HTML-Emails in Microsoft Outlook, mit Profil-, Sprach- und Zielgruppen-abhangigen Signaturen. Im Rahmen dieser Aufgabe soll diese Funktionalitat neu auch auf Smartphone unter Windows Mobile 7.0 verfugbar gemacht werden.  Vorgehen/Technologien  Fur die Losung der Aufgabe wurden folgende Schritte durchgefuhrt:  - Umfassende Analyse der Anforderungen  - Analyse der Machbarkeit  - Konzeptioneller Design und Architektur  Als wichtiger Teil der Aufgabe wurde die Integration eines HTML-Editors in Windows Phone 7, um Email in HTML-Format versenden zu konnen.  Folgende Technologien und Tools wurden eingesetzt:  - Visual Studio 2010  - C#, .Net 4.o  - Silverlight for Windows Phone  - Model v View ViewModel  - Windows Communication Foundation(WCF Service)  Resultat  Die Entwickelte Windows Phone 7 App macht folgende Funktionalitaten verfugbar:  - Verfugbare Documenttyps aus der Datenbank laden und im WP7 anzeigen  - Wenn der Nutzer einen Documenttyp auswahlt, werden automatisch die dazugehorigen Parameter aus der Datenbank angezeigt  - Parameter in zwei Gruppen unterteilen :  - CheckboxParameter  - DropDownParameter  - Parameterwerte fur die DropDownParameter anzeigen, wenn ein DropDownParameter ausgewahlt wird.  - Document anhand ID des gewahlten Documenttyps und die gewahlte Sprache aus der Datenbank laden und im Editor anzeigen.  - HMTL-Document per Email versenden.","",""
1,"Graeme Baillie, Brian Armour, Dave Allan, R. Milne, Thomas M. Connolly, R. Beeby","A Model-View-DynamicViewModel and its Performance in a Web-based Component Architecture",2011,"","","","",84,"2023-02-26 08:25:51","","","","",,,,,1,0.08,0,6,12,"The implementation of an appropriate software architecture is crucial in achieving the optimum performance from a system. Web-based applications are becoming increasingly popular in replacing previous Windows-based applications. This has lead to a growth in new technologies and architectures to cope with the new workload and performance demands that web-based applications can require. This paper will look at a current software company that provides process-heavy web-based application systems providing grant management services to medical and academic research. The purpose of this paper is to analyze the performance of their existing Web Forms based management system against newly developed dynamic component-based architecture using a variant of the Model View Controller (MVC) and Model-View-ViewModel (MVVM) patterns, which we have termed MVDVM (Model-View-DynamicView Model). Accurate and meaningful results will demonstrate how applications can now benefit from this approach.","",""
0,"R. Cameron","Advanced MVVM, Services and App Connect",2011,"","","","",85,"2023-02-26 08:25:51","","10.1007/978-1-4302-3937-6_7","","",,,,,0,0.00,0,1,12,"","",""
0,"Marko Grbić","KINOSPOREDNIK – RAZVOJ APLIKACIJE IN INTEGRACIJA VSEBIN NA WINDOWS PHONE OPERACIJSKEM SISTEMU",2011,"","","","",86,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,12,"Trg pametnih telefonov iz leta v leto narasca. Želeli smo spoznati postopek izdelave aplikacij in integracijo vsebin na pametnih mobilnih telefonih. Za to smo izbrali Windows Phone OS, za katerega smo izdelali aplikacijo KinoSporednik, ki prikazuje spored za kino centra Kolosej in Planet Tus. Za izdelavo smo uporabili Silverlight ogrodje, LINQ to XML knjižnico in Model View ViewModel vzorec. Aplikacijo smo tudi objavili na uradnem Windows Phone Marketplace-u.","",""
3,"Hu Shi-qing","System architecture and pattern research of RIA based on silverlight",2010,"","","","",87,"2023-02-26 08:25:51","","","","",,,,,3,0.23,3,1,13,"To solve the problems of the design pattern for rich internet application (RIA) systems development, the silverlight-based RIA architecture is analyzed, according to problems of unit testing and tight coupling when using the model-view-controller (MVC) and the model-view-presenter (MVP) pattern to design RIA systems, the model-view-viewmodel (MVVM) pattern is proposed. This pattern is composed of model, view and viewmodel, the problem of data swap between the model and the viewmodel is resolved by realizing INotifyPropertyChanged interface, and the model independent of the viewmodel is realized. In the while, the problem of event binding in view is resolved by realizing ICommand interface, combined with data binding, the viewmodel independent of the view is realized. Examples show that using the MVVM pattern to design the RIA system can realize the logical interface complete separate from the application logic and has a good capacity of automated testing.","",""
1,"P. Brown","Silverlight 4 in Action",2010,"","","","",88,"2023-02-26 08:25:51","","","","",,,,,1,0.08,1,1,13,"Silverlight 4 in Action is a fast-paced, comprehensive tutorial that guides the reader from creating ""Hello World"" to coding production-quality, data-driven rich internet applications with graphics, audio, and video content. Written for a developer who already knows how to code in C#, this fluff-free book covers the basics quickly and dives into the heart of Silverlight development using XAML (a markup language for creating user interface elements) andVisual Studio 2010. You'll learn not only how to accomplish tasks, but how the underlying runtime works.In addition to the fundamentals, the book covers the new features in Silverlight like pixel shaders, webcam and microphone, and raw media, as well asWCF RIA Services and patterns like MVVM (Model-View-ViewModel). It explains developing offline and ""out-of-browser"" applications, managing video and audio, handling validation, navigation and deep-linking, and how each Silverlight feature fits into the overall Silverlight ecosystem.Table of ContentsIntroducing SilverlightCore XAMLThe application model and the plug-inIntegrating with the browserIntegrating with the desktopRendering, layout, and transformingPanelsHuman inputTextControls and UserControlsBindingData controls: DataGrid and DataFormInput validationNetworking and communicationsNavigation and dialogsStructuring and testing with the MVVM/ViewModel patternWCF RIA ServicesGraphics and effectsPrintingDisplaying and capturing media (including webcam/mic)Working with bitmap imagesAnimation and behaviorsResoures, styles, and control templatesCreating panels and controlsThe install experience and preloaders","",""
0,"Vítězslav Kuliš","Technologie Windows Presentation Foundation",2010,"","","","",89,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,13,"Tato bakalařska prace se zaměřuje na vývoj uživatelskeho rozhrani pomoci technologie Windows Presenatation Foundation (dale WPF). Po uvedeni zakladnich rysů a architektury porovnava vybrane oblasti s alternativni technologii Windows Forms. Dale se prace zabýva nasazenim WPF v oblasti podnikových aplikaci s využitim navrhoveho vzoru Model-View-ViewModel a popisuje s tim souvisejici problemy.","",""
0,"Jan Golasowski","Seznámení se s technologií Composite WPF (Prism) a ověření technologie v ukázkové aplikaci",2010,"","","","",90,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,13,"Technologie Composite WPF, oznacovana jako Prism V2, slouži pro vývoj kompozitnich aplikaci pro Windows Presentation Foundation. Jejim cilem je usnadnit vývoj těchto aplikaci a to zejmena s pomoci navrhových vzoru typu Inversion of Control a Separated Presentation. Samotný balik knihoven, kterým Prism v2 je, vsak mnohdy pro vývoj rozsahlých kompozitnich aplikaci nestaci. Jedna se předevsim o problem použiti vzoru Model-View-ViewModel pro zobrazovani modalnich a nemodalni oken, jejich nasledne zavirani apod.Tato prace slouži jednak pro seznameni s technologii Prism, ale zabýva se i otazkou řeseni výse jmenovaných problemu.","",""
0,"H. Mansell","Eden: an F#/WPF framework for building GUI tools",2010,"","","","",91,"2023-02-26 08:25:51","","10.1145/1900160.1900174","","",,,,,0,0.00,0,1,13,"Our group within Credit Suisse is responsible for developing quantitative models used to value financial products within the Securities Division of the bank. One aspect of this role is to deliver tools based on those models to trading and sales staff, which they can use to quickly price proposed transactions and perform other analysis of market conditions. Historically these tools have been delivered as Excel spreadsheets.  WPF (Windows Presentation Foundation) is a GUI framework which encourages architectural separation between the layout of the user interface itself (the ""View"") and the underlying interactions and calculations (the ""ViewModel"" and ""Model""). We have built a framework for developing tools in WPF that makes use of a graph-based calculation engine for implementing ViewModels and Models in F#. The engine is built on F# asynchronous workflows and provides a standard set of features to our tools. In this talk I'll discuss the implementation of this calculation engine, including various steps in its evolution that led up to our use of asynchronous workflows. I'll also talk about how well F# and asynchronous workflows have worked for us, and briefly discuss some of the challenges of integrating F# and WPF.","",""
0,"Raunak R Kolle, Dr. Rajashekara Murthy S","Enhancing the Performance of Android",2022,"","","","",92,"2023-02-26 08:25:51","","10.22214/ijraset.2022.45965","","",,,,,0,0.00,0,2,1,"Abstract: In the present day, with the increasing popularity of the android operating system, applications being built on the Android SDK draw much attention. However, some applications built on android tend to have a cumbersome interface causing inconveniences to users. This can be reduced by eliminating the redundancies during the build of these applications. List view is commonly used in android applications to arrange a list of scrollable items in a sequential order. This consumes a considerable amount of memory and CPU utilization resulting in the degradation of the applications. One proposed solution to this can be the introduction of the RecyclerView. The RecyclerView traditionally replaces the GridView and the ListView which were previously used in android applications. This improvement is achieved by recycling the views which are out of the visibility of the user inturn enhancing both the ListView as well as the GridView. Networking in android was previously a nightmare for developers where they had to retrieve and analyze their own data. Data transfer is performed in Android applications using a Web REST API. Development speed can be enhanced by efficient data analysis by utilizing a library from the entire range of REST client libraries. REST (Representational State Transfer) has become the most commonly used way for creating, publishing, and consuming Web services, exploiting JavaScript Object Notation (JSON) as a data exchange format. The most used libraries for accessing the REST Web APIs today are Android Volley and Retrofit. An android device is hindered by limited power, memory and resources. Several architectures such as MVC(Model-View-Controller), MVP(Model-view-Presenter) and MVVM(ModelView-Viewmodel) are commonly used in the development of android applications. In order to develop applications with efficient CPU utilization, reduced memory usage and a lowered execution time, the most suitable of these architectures is to be utilized","",""
0,"M. Robinson, A. Patel, Kelly M Wilmas, V. Thomas, M. Heberton","Cutaneous Surgery Outcomes in Patients on Epidermal Growth Factor Receptor Inhibitors",2021,"","","","",93,"2023-02-26 08:25:51","","10.1097/DSS.0000000000003214","","",,,,,0,0.00,0,5,2,"by proper placement of the respective masks on the photograph (Figure 1B,C). The vessels and nerves are numerically labeled in the output image, and the index is provided beside the image. The online video shows the demonstration of the method (see Supplemental Digital Content 1, Video 1, http://links.lww.com/DSS/A889). The placement of the masks depends on the recognition of facial keypoints in the photograph. Therefore, we recommend the use of focused sharp portrait photographs either in the proper natural lighting or the use of flash. The photographs can be obtained by using either a smartphone or a digital camera. To avoid the distortion of the face, we also recommend taking the photographs from at least a half meter distance from the subject. This method uses the concept of detecting specific facial landmarks rather than detecting the whole face or trying to recognize the individual. This allows for the proper placement of the anatomical structures over the image. There are several limitations of this method. The face of some individuals may be disproportionate, which might alter the placement of the masks. In addition, the position and course of vessels and nerves of the face of different individual vary. Therefore, the results of this method should currently be used in the educational setting rather than a clinical one. However, the method could be improvised by collecting the information about the different variations of the course of vessels and nerves to construct “bands” of their course rather than definite lines. These bands could then be overlaid on the images to guide the clinician regarding the possible courses of the specific structure. Additional improvement of this method could include improving the accuracy of the ML model using a larger data set and using individual masks for the different vessels and nerves. Similarly, a lateral viewmodel could also be developed. Another use case scenario could be the overlaying of the facial muscles and underlying bones on the image. Being able to overlay these structures on an actual patient’s/subject’s photograph could make educational sessions of the use of botulinum toxins and facial fillers more interactive.","",""
0,"G. Lodi","Injecting Dependencies with @EnvironmentObject",2021,"","","","",94,"2023-02-26 08:25:51","","10.1007/978-1-4842-7002-8_11","","",,,,,0,0.00,0,1,2,"","",""
0,"Arrival Dwi Sentosa","SELF-LEARNING PERSONAL FINANCIAL ASSISTANT ANDROID APPLICATION USING MVVM ARCHITECTURAL PATTERN",2020,"","","","",95,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,3,"Personal Financial Management is an essential thing for everyone. Some of the  financial purposes are goal setting, money cash flow management, preparing for  children education or just for an investment. Most of people don’t know how to  manage it well then try to use an application to help manage it. But mostly such  these applications are not user friendly and confusing for some of us because some  of financial words that we don’t understand. To make a user friendly and good user  experience of user when using personal financial application, it can be applied the  Natural Language Processing (NLP). The utilization of NLP is able to use the  application easier, since NLP can predict user input means, give the suggestion and  prediction periodically to inform and approach the user to reach their own financial  goal. To perform the best result of NLP Implementation, there are two methods that  used: Intent Classification using SVM Algorithm and Named Entity Recognition  Conditional Random Field (NERCRF). The dataset used are trained based on user  input interaction inside the application and labeled based on features/intent in the  application such as: Cash flow input, Budgeting, Goals and Financial suggestion.  The prototype is developed for Android platform based on Model-View-  ViewModel Software Architectural Pattern as a best practice of Android  Development Architectural Pattern.  Key words:  Personal Financial Management, Intent Classification, Named Entity Recognition,  SVM Algorithm, Android, Model-View-ViewModel","",""
0,"Torsten Spieldenner, R. Schubotz","A Linked Data Model-View-* Approach for Decoupled Client-Server Applications",2019,"","","","",96,"2023-02-26 08:25:51","","10.1007/978-3-030-41407-8_5","","",,,,,0,0.00,0,2,4,"","",""
0,"Gyurácz Mihály","Egyetemi polgárokat támogató alkalmazás fejlesztése",2019,"","","","",97,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,4,"A szakdolgozatom celja bemutatni az elkeszitett alkalmazasomat, mely főleg az egyetemre ujonnan erkező hallgatok tamogatasara jott letre. Segiti a hallgatoknak megtalalni a termeket, ahol az orajuk lesz egy Google terkep, es az epulet tervrajzanak segitsegevel. Hasonloan megkereshetik egyes oktatok irodajat is. Tovabba orarendjuket is ezen alkalmazason keresztul vezethetik.  Munkam soran letrehoztam egy webalkalmazast, mely egy mobil alkalmazasbol es backend reszből all, melyek REST (Representational State Transfer) API-val kommunikalnak. Elsőkent megismerkedtem a Spring Boot-tal, az Android platformmal, valamint a REST API-val es a JSON Web Token alkalmazasaval. Megterveztem a program kinezetet, es hogy melyik hasznalati eset milyen funkciokat lasson el. Ehhez nagy segitsegemre volt a Balsamiq Mockups 3 nevű program.  Ezutan johetett az adatbazis tervezese, ahol szem előtt tartottam, hogy milyen felhasznalok lesznek, valamint jogosultsagok Illetve milyen egyeb informacio tarolasara lesz szuksegem a felhasznalokkal kapcsolatban. Mint peldaul a targyak, amiket felvettek, a targyakhoz termek is kapcsolodnak. Tehat egy targyak es egy termek tabla is kell.  A tervezesek utan nekiallhattam az alkalmazas megvalositasanak. Előbb a backend reszet keszitettem el Spring Boot-tal, amely a legnepszerűbb nagyvallalati celra keszitett Java keretrendszer. Előszor a regisztracio es bejelentkezes reszet implementaltam Spring Security felhasznalasaval. Ezt kovetően jott az adatbazissal valo kapcsolat kiepitese, melyhez ORM-et (Object-Relational Mapping) hasznaltam, amely a JPA (Java Persistence API) volt a magasszintű kezelhetőseg erdekeben, ez a Java EE (Enterprise Edition) ORM megoldasa. Majd a tovabbi funkciok hozzaadasaval folytattam, ami mar a tenyleges uzleti logika. Ezek utan pedig az email kuldes es a HTTPS-el tortenő kommunikacio implementalasa tortnet meg.  Termeszetesen minden egyes elkeszult reszfunkciot tesztelni is kellett, majd az egesz backend elkeszultevel ujra el kellett vegezni a tesztelest, amihez meghatarozo szerepet toltott be a Postman. Ezen szoftver segitsegevel frontend nelkul is tudtam HTTP kereseket kuldeni a szerverre.  A szerver utan kovetkezett a kliens oldal letrehozasa. Ezt Android platformra fejlesztettem. A mobil alkalmazas es a backend osszekapcsolasahoz a Retrofit 2 konyvtarat valasztottam, ugyanis egyszerűen kezelhetőve teszi a HTTP keresek kuldeset es fogadasat. Tovabba a szabvanyos konyvtarszerkezet megalkotasahoz az MVVM (Model–view–viewmodel) architekturat kovettem, melyet a Google is tamogat. A fejlesztest az egyes hasznalati esetek implementalasara bontottam. Előszor itt is a bejelentkezest es a regisztraciot keszitettem el, majd a tobbi funkciot.  A kliens oldal befejezeset kovetően az egesz alkalmazas hasznalat kozbeni tesztelesevel zarult a feladat. Ahol ellenőriztem, hogy helyes es helytelen adatok kuldesevel es ezekre jovő valasz kezelesevel is megfelelően műkodik-e a program. Illetve a kapcsolatot nem igenylő elemek is jol műkodnek-e, peldaul: kereses.    Vegul sikerult elernem a kitűzott celt, es egy olyan alkalmazast hoztam letre, amely segiti a kezdő hallgatokat az egyetemen valo eligazodasban, es konnyebben megtalaljak a termeket, ahol az oraik lesznek.","",""
0,"C. Nau","Analyse und Konzeption eines effizienten, IT–gestützten Brunnenmanagements",2017,"","","","",98,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,6,"Der storungsfreie Betrieb von Brunnen ist das Hauptanliegen eines jeden Brunnenbetreibers, da das geforderte Grundwasser, das fur das Uberleben des Menschen wichtigste Lebensmittel darstellt. Dabei ist nicht nur die Vermeidung von Ausfallen dieser zentralen Anlagenteile der Wasserversorgungsanlagen, sondern auch deren moglichst kosteneffizienter Betrieb ein Anliegen. Die hiesige Arbeit beschaftigt sich mit der Erstellung eines Konzeptes fur ein IT-gestutzten Brunnenmanagementsystem. Dieses System soll es ermoglichen, allen beim Bau und Betrieb eines Brunnens beteiligten Akteuren, samtliche relevanten Daten zur Verfugung stellen zu konnen. Auserdem sollen die beim Betrieb anfallenden Messdaten, mit geeigneten Methoden und in sinnvollem Umfang, erfasst und archiviert werden. Hierfur wurde zunachst analysiert, welche Daten und Dokumente, sowohl beim Bau, als auch nach der Inbetriebnahme eines Brunnens anfallen und in welchen Formaten diese vorliegen. Fur die Analyse wurden Gesprache, sowohl mit Fachleuten die im Brunnenbau und in der Brunnenwartung und –sanierung tatig sind, als auch mit Brunnenbetreibern gefuhrt, um in Erfahrung zu bringen, wie alltagliche Arbeitsablaufe gestaltet sind und welche Dokumente und Daten dabei beteiligt sind. Im Anschluss wurde ein Konzept fur die Erfassung der Stammdaten eines Brunnens, sowie fur die Betriebsdatenverarbeitung erstellt. Zur Umsetzung des Konzeptes in Form eines Prototypens eines Brunnenmanagementsystems wurde die Programmiersprache C# eingesetzt. Weiterhin kamen die Technologien Windows Presentation Foundation (WPF), Entity Framework, PRISM sowie das Entwurfsmuster Model View ViewModel (MVVM) zum Einsatz. Als Datengrundlage dienen Brunnnenbetriebsdaten und –unterlagen deutscher Wasserversorger, welche fur die Entwicklung des Prototypens zur Verfugung gestellt worden sind. Mit dem erstellten Brunnenmanagementsystem konnen die Stammdaten von Brunnen in Form einer digitalen Brunnenakte verwaltet werden. Diese digitale Brunnenakte beinhaltet ein Dokumentenmanagement fur eine geeignete Datenhaltung der digitalen Unterlagen. Neben diesen Dokumenten konnen Stammdaten wertemasig auf Eingabemasken detailliert erfasst werden. Weiterhin ist die Datenubernahme von Betriebsdaten aus Prozessleitsystemen und von Datenloggern, der in den Brunnen verbauten Sensoren, mit Hilfe eines Importmodules moglich. Fur diesen Import konnen auserdem Filter zur Reduzierung der Datenmengen konfiguriert werden, welche die Betriebsdaten bei der Ubernahme automatisch ausdunnen, ohne dabei wertvolle Informationen zu verlieren. Das System zeigt auserdem die Potentiale der IT-gestutzten Auswertung von Betriebsdaten. Zur Veranschaulichung wurde hierfur die Berechnung von spezifischen Brunnenergiebigkeiten, aus virtuellen Pumpversuchen – generiert durch die Betriebsdaten – implementiert. Die Ergebnisse konnen in Form eines Diagramms dargestellt werden.","",""
0,"Andrew Bradley","Technical Report: Imperium",2016,"","","","",99,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,7,"Imperium is a reliable diabetes management tool that simplifies diabetes care by allowing people to record and monitor their blood sugar level quickly and easily, and facilitating communication between individuals and healthcare providers. In addition to assisting with logging blood sugar readings the mobile application, offers more advanced functionality if the user wishes to use it. This includes the ability to view historical results in an array of different graphs, which allows the user to quickly identify trends, such that patterns of problematic readings can be addressed. Equally, stable readings will help to reinforce the benefits of a healthy lifestyle, which should in turn encourage the user to continue with that approach.    To facilitate communication between the user and their doctor/healthcare professional (HCP) it allows results to be shared both via email with a csv attachment directly from the App, and also by means of the external sync option. The latter allows the user to sync all recorded results from the devices local database with an external website. The doctor can then log in to this website and see real time data and advise the patient on any changes needed.    An appointments section helps the user keep track of upcoming appointments and a notification of an upcoming appointment servers as a reminder to either send or upload your latest results.    For development Visual Studio is being used and languages used are C# and XAML. SQLite is being used for the database which is stored on the devices and Microsoft Azure will host the website. The software architecture being followed is the MVVM (Model – View- ViewModel) approach allowing the GUI to be easily resized while sharing the rest of the code across different devices.","",""
0,"Tobias Löser","Konzept für ein integriertes Management von Geoinformationen unterschiedlicher Fachdo-mänen für kombinierte, räumliche und zeitliche Analysen und Simulationen am Beispiel Gebäudekategorisierung und Wasserbewirtschaftung",2016,"","","","",100,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,7,"Geoinformationen werden in vielen Fachdomanen als Grundlage fur umfangreiche Analysen und Auswertungen genutzt. Dabei spielen sowohl raumliche Zusammenhange als auch zeitliche Entwicklungen eine Rolle. Die vorliegende Arbeit beschaftigt sich mit der Erstellung eines Konzepts fur ein integriertes Management von Geoinformationen. Dieses Management soll es ermoglichen, unterschiedliche fachdomanenspezifische Analysen und Simulationen effizient zu kombinieren und bedarfsgerecht zu visualisieren. Dabei wird zunachst analysiert, welche Austauschformate von den unterschiedlichen Fachdomanen genutzt werden und wie sich deren Aufbau unterscheidet. Anschliesend wird ein Konzept erstellt, dessen Datenmodell die Daten aller zuvor analysierten Austauschformate verlustfrei reprasentieren kann. Zusatzlich umfasst das Konzept die Datenverwaltung sowie Moglichkeiten der Visualisierung und Analyse der Daten uber eine Benutzeroberflache. Hierbei wird im Besonderen auf die Bereiche Wasserbewirtschaftung sowie Gebaudekategorisierung eingegangen. Im Anschluss wird die Umsetzung des Konzepts in Form eines Prototypen beschrieben. Hierbei werden anhand zuvor festgelegter Kriterien verschiedene Datenbanksysteme analysiert, um eine geeignete Datenhaltung zu gewahrleisten. Zur Umsetzung des Systems wird die Programmiersprache C#, Windows Presentation Foundation (WPF) sowie das Entwurfsmuster Model-View-ViewModel (MVVM) verwendet. Als Datengrundlage fur den Bereich Wasserbewirtschaftung dienen Flurabstandsplane sowie Gebaudedaten von OpenStreetMap. Zur Durchfuhrung der Gebaudekategorisierung werden Daten von MapPLUTO aus Manhattan verwendet, da keine Geobasisdaten deutscher Gebaude mit den fur die Gebaudekategorisierung benotigten Attributen vorliegen. Mit dem erstellten System konnen die Daten, welche als Datengrundlage dienen, in das Management importiert und dort verwaltet werden. Es wurden Dialoge zum Import von Shapefiles und OpenStreetMap im Format XML umgesetzt. Durch eine zeitliche Auswertung auf einer Karte lassen sich die Veranderungen des Grundwassers auf Basis der importierten Flurabstandsplane simulieren. Die Deutsche Gebaudetypologie wurde zur raumlichen und zeitlichen Analyse der Gebaude von Manhattan verwendet. Anhand von Anwendungsbeispielen wird gezeigt, welche Moglichkeiten das System zur Umsetzung von kombinierten, raumlichen und zeitlichen Analysen und Simulationen bietet.","",""
0,"Tobias Löser","Konzept für ein integriertes Management von Geoinformationen unterschiedlicher Fachdo-mänen für kombinierte, räumliche und zeitliche Analysen und Simulationen am Beispiel Gebäudekategorisierung und Wasserbewirtschaftung",2016,"","","","",101,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,7,"Geoinformationen werden in vielen Fachdomanen als Grundlage fur umfangreiche Analysen und Auswertungen genutzt. Dabei spielen sowohl raumliche Zusammenhange als auch zeitliche Entwicklungen eine Rolle. Die vorliegende Arbeit beschaftigt sich mit der Erstellung eines Konzepts fur ein integriertes Management von Geoinformationen. Dieses Management soll es ermoglichen, unterschiedliche fachdomanenspezifische Analysen und Simulationen effizient zu kombinieren und bedarfsgerecht zu visualisieren. Dabei wird zunachst analysiert, welche Austauschformate von den unterschiedlichen Fachdomanen genutzt werden und wie sich deren Aufbau unterscheidet. Anschliesend wird ein Konzept erstellt, dessen Datenmodell die Daten aller zuvor analysierten Austauschformate verlustfrei reprasentieren kann. Zusatzlich umfasst das Konzept die Datenverwaltung sowie Moglichkeiten der Visualisierung und Analyse der Daten uber eine Benutzeroberflache. Hierbei wird im Besonderen auf die Bereiche Wasserbewirtschaftung sowie Gebaudekategorisierung eingegangen. Im Anschluss wird die Umsetzung des Konzepts in Form eines Prototypen beschrieben. Hierbei werden anhand zuvor festgelegter Kriterien verschiedene Datenbanksysteme analysiert, um eine geeignete Datenhaltung zu gewahrleisten. Zur Umsetzung des Systems wird die Programmiersprache C#, Windows Presentation Foundation (WPF) sowie das Entwurfsmuster Model-View-ViewModel (MVVM) verwendet. Als Datengrundlage fur den Bereich Wasserbewirtschaftung dienen Flurabstandsplane sowie Gebaudedaten von OpenStreetMap. Zur Durchfuhrung der Gebaudekategorisierung werden Daten von MapPLUTO aus Manhattan verwendet, da keine Geobasisdaten deutscher Gebaude mit den fur die Gebaudekategorisierung benotigten Attributen vorliegen. Mit dem erstellten System konnen die Daten, welche als Datengrundlage dienen, in das Management importiert und dort verwaltet werden. Es wurden Dialoge zum Import von Shapefiles und OpenStreetMap im Format XML umgesetzt. Durch eine zeitliche Auswertung auf einer Karte lassen sich die Veranderungen des Grundwassers auf Basis der importierten Flurabstandsplane simulieren. Die Deutsche Gebaudetypologie wurde zur raumlichen und zeitlichen Analyse der Gebaude von Manhattan verwendet. Anhand von Anwendungsbeispielen wird gezeigt, welche Moglichkeiten das System zur Umsetzung von kombinierten, raumlichen und zeitlichen Analysen und Simulationen bietet.","",""
1,"Marius Hansen Røed","Verification and visualization of equipment access on offshore platforms",2014,"","","","",102,"2023-02-26 08:25:51","","","","",,,,,1,0.11,1,1,9,"The Master’s thesis discusses verification of equipment transport on offshore platforms. The goal of the thesis is to use the form finding method dynamic relaxation to create a software application, which helps the layout engineers to automatically check whether an equipment transport route on offshore platforms is feasible using dynamic relaxation. This could potentially save a lot of time and add value by enabling the ability to run several iterations of the transport route with little effort. The thesis presents a new workflow, based on using the new application, and discusses advantages and disadvantages between the new and current workflow for transport route verification. By using Autodesk Navisworks and its .NET and COM API, a plug-in application was created for Navisworks, to automatically verify movement of an object through a given access way. This was done using Navisworks clash detective feature through the .NET API. The plug-in application required input parameter such as a validation object, a boundary geometry and a path. The plug-in application is divided into two phases; one path optimizing phase, and one verification phase. The optimizing phase is a pre-phase for the verification phase, to optimize run-time speed. The verification phase uses dynamic relaxation to try to move the validation object through the given path. If the validation object clashes with the boundary geometry, the dynamic relaxation will try to find a point of equilibrium where there is no clash. The plug-in application uses WPF (Windows Presentation Foundation) as a presentation system in .NET, with the MVVM (Model-View-ViewModel) architecture. The visualization of the validation object’s movement, and the verification result, is done via Navisworks .NET API, where the movement is presented in Navisworks’ own UI. The plug-in application’s UI will present information about the status of a verification. The UI gives the opportunity for the user to monitor the velocity, acceleration and applied force in the dynamic relaxation method during verification using chart controls.","",""
0,"M. Westberg","TestLink : Software for connecting laboratory equipment and automation of workflow.",2015,"","","","",103,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,8,"Software development is of great significance in manufacturing and process industry. Software can, for example, make production more efficient and monitoring easier. In paperboard industry testing the product, that is, paperboard, is important. Testing is done to make sure that the product meets the requirements of the customers who transform the paperboard to packaging products. In the Skoghall paperboard Mill operators make use of a range of different test methods. Since the work pace is high and the product is being continuously tested improvements of the workflow at the laboratory are always of interest. The aim of this project is to develop a program that connects test instruments at Skoghall Mill’s test laboratory to the Mill’s network. The motivation is to automate part of the work process by removing the step of manually reading measurement values from the test instruments. The scope of this project includes developing software that connects one of the instruments (the Short Span Compression tester [1] or SCT) at the laboratory to the Mill’s network. This program, named TestLink, will work as a proof of concept for connecting instruments using a common interface. The software is constructed using a modular approach forming a platform where an additional instrument can be connected by creating a new module. The software is developed in Visual Studio using C# as the programming language. The software architecture follows the MVVM [2] (Model View ViewModel) design pattern paradigm and WPF [3] (Windows Presentation Foundation) is used to construct the graphical user interface. The result shows that time savings can be made when automating part of the work with the introduction of new software.","",""
0,"A. Dayalan","Ext JS 6 By Example",2015,"","","","",104,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,8,"Create powerful, real-world web applications with Ext JS 6 using sample projectsAbout This BookExplore, debug, and get practical by extending the sample projects, including a sample RESTful API project in Ext JS 6Gain a quick and easy understanding through working source code and get an explanation of multiple cool sample projectsA project-based guide to help you get your hands on real-world applicationsWho This Book Is ForIf you're a front web developer who is looking to learn a new JavaScript framework, or if you already know about Ext JS and are looking for a practical resource with multiple example projects to get expert-level knowledge in Ext JS, then this guide will be a great resource for you. A basic understanding of HTML, CSS, and JavaScript is expected.What You Will LearnInstall Ext JS Sencha Cmd 6 and debugging tools such as Illumination, App Inspector, and Sencha FiddleUnderstand and apply the core concepts and querying capabilities of Ext JS 6Dive deep into powerful components such as Grid, Data View, Trees, and different kinds of charts including 3D charts as well as Bar, Area, Pie, Line chartsDiscover how an Ext JS 6 application communicates with the server side through Data Packages such as Stores and ProxiesDiscover how to create responsive web applications and client-side routingAcquire and implement knowledge on accessibility, localization, and the drag-and-drop and theming capabilities of Ext JS 6In DetailExt JS is one of the most famous JavaScript frameworks used to create rich interactive web applications using techniques such as Ajax, DHTML, JSON, and DOM scripting.It provides a complete rich set of GUI controls, has an excellent API for AJAX and REST, and helps users to organize their code with Model View ViewModel (MVVM) or the MVC architecture, and supports two-way data binding, responsive layouts, responsive design, and more.It is an extensive, one-stop-shop to build an JavaScript RIA application.This book starts with a clear step-by-step installation guide for Ext JS 6 and the additional tools required for development on both Mac and Windows operating systems. It then covers the core concepts and fundamentals of Ext JS 6.We move on to focus on multiple basic GUI controls such as buttons, message boxes, and menus, and a sample project that covers the fundamental and basic GUI controls. You'll also learn how to design a form with form fields such as a text field, number field, date picker, label, and radio button, and learn about form validation. We proceed to show you how to organize your code using the MVVM application architecture, and you'll then jump into advanced controls such as Grids, Trees, Data Views, and Charts.You'll also learn about the API required for AJAX and REST communication, and learn all need to know about Ext JS Data Packages. A working RESTful API sample project is included to help you explore the Data Packages. Finally, we end with a discussion on responsive design, theming your application, and the available plugins.Style and approachThis is an example-based guide to help you develop rich Internet applications using Ext JS 6. Most of the chapters start with a particular concept and code example, and end with a cool sample project that uses the concepts learned in the chapter.","",""
0,"Patrick Pulfer","MeteoCheck Relaunch mit Xamarin",2014,"","","","",105,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,9,"Diese Studienarbeit befasst sich mit der plattformubergreifenden Entwicklung fur mobile Gerate mit Xamarin als Entwicklungsumgebung. Hinter Xamarin steht das Mono Framework, eine Open Source Implementierung des Microsofts .NET Framework, welches im Jahr 2001 erstmals veroffentlicht wurde. Der Vorteil von Xamarin ist, dass native Applikationen fur alle drei fuhrenden mobilen Plattformen mit der gleichen Programmiersprache C# entwickelt werden konnen. Xamarin hat die Schnittstelle von Android und iOS mit regularen C# Klassen gekapselt. Entwickler profitieren von der modernen Programmiersprache C# und deren Funktionalitaten wie LINQ, funktionalen Lambda Ausdrucken und Generics. Im Gegensatz zu Web Apps wird das User Interface pro Plattform separat programmiert. Dadurch wird das gewunschte Benutzererlebnis erreicht und es konnen auch leistungskritische Anwendungen wie Spiele programmiert werden. Als primares Ziel gilt das gemeinsame Nutzen von Code. Mit Hilfe von portablen Klassenbibliotheken ist es moglich, den gleichen Code fur alle drei Plattformen zu nutzen. Eine saubere Trennung zwischen dem User Interface und dem Business Layer ist erstrebenswert. Um dies zu erreichen, muss das Model-View-ViewModel Muster (MVVM) plattformubergreifend genutzt werden konnen. Das Framework MvvmCross stellt hierfur einige Bibliotheken zur Verfugung. Nachdem die Grundlagen von Xamarin und MvvmCross bekannt waren, stand die Portierung der bestehenden Windows Phone App „MeteoCheck.ch“ auf Android und iOS im Vordergrund. Die Applikation bietet nebst den aktuellen Wetterprognosen auch zusatzlich Informationen wie zum Beispiel Lawineninformationen, Sonnenstand und Live Kamera Bilder. Nach einer grundlichen Analyse wurde das vorhandene Projekt in eine portable Klassenbibliothek und in ein Windows Phone Projekt aufgeteilt. Die portable Klassenbibliothek enthalt alle ViewModels und ist fur die Kommunikation mit dem Web Server zustandig. MvvmCross hat zudem einen IoC Container und ein Navigation Controller implementiert, wodurch die Navigation der einzelnen Ansichten uber die ViewModels gesteuert werden kann. Die grosste Schwierigkeit bestand fortan bei der Entwicklung der einzelnen User Interfaces. Bei der Android Entwicklung war dies vergleichsweise einfach, da Java Implementierungen fast identisch mit C# abgebildet werden konnten. Bei iOS Applikationen mit der nativen Programmiersprache Objectiv-C, war dies durch den gesetzten zeitlichen Rahmen schwieriger, was fur den weiteren Verlauf bedeutete, dass der Android Prototyp erweitert wurde. Abschliessend kann gesagt werden, dass mit Xamarin gute Applikationen entwickelt werden konnen, sofern die notwendigen Kenntnisse uber die Architektur und den Lebenszyklus der jeweiligen Plattformen vorhanden sind.","",""
0,"Pavel Yosifovich","Mastering Windows 8 C++ App Development",2013,"","","","",106,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,10,"A practical guide to developing Windows Store apps with C++ and XAML Overview Details the most important features of C++, XAML, and WinRT for building fantastic Windows Store apps Full of detailed and engaging code samples that can be used as a basis for your own projects Provides a clear overview of Windows Runtime and C++/CX In Detail Windows 8 provides an unprecedented opportunity for developers to create applications for a new and exciting platform, for an entirely new market. Leveraging modern C++ and the new Windows Runtime, this book guides you through the many facets of WinRT whilst using modern C++ features for ultimate power and performance. ""Mastering Windows 8 C++ App Development"" shows you how to create Windows Store apps that use many of the new features and functionality available for Windows 8. You'll discover how you can harness the power of the new Windows Runtime with C++ combined with XAML for the creation of fantastic user experiences. Starting with coverage of C++/CX (a set of extensions that make working with WinRT easier) and user interface design with XAML, this book shows you how to use major Windows 8 features, including Live Tiles and Contracts, while leveraging common patterns such as data binding and the Model View ViewModel (MVVM). You'll discover how WinRT works, its various capabilities, and how it can best be leveraged using C++11 and Visual Studio 2012. What you will learn from this book Leverage your existing C++ skills with this new and exciting platform Discover how to effectively use C++/CX to call Windows Runtime APIs Integrate XAML for fast and fluid user interfaces Create custom controls for special UI scenarios Learn how to integrate your application with Windows 8 by implementing contracts Build data-driven apps with XAML, data binding, and MVVM Approach Specifically designed to be an engaging and practical tutorial, Mastering Windows 8 C++ App Development will augment your skills and help you create high quality Windows Store apps. Who this book is written for If you are a C++ developer who wants to utilize the combined power of COM, WinRT, C++/CX, and XAML to build Store apps for the new Windows 8 platform, then this book is for you. Prior experience with XAML-based technologies is not required.","",""
2,"Kyle Burns","Beginning Windows 8 Application Development: XAML Edition",2012,"","","","",107,"2023-02-26 08:25:51","","10.1007/978-1-4302-4567-4","","",,,,,2,0.18,2,1,11,"","",""
1,"Ashish Ghoda","Windows 8 MVVM Patterns Revealed: covers both C# and JavaScript",2012,"","","","",108,"2023-02-26 08:25:51","","","","",,,,,1,0.09,1,1,11,"The Model-View-View-Model (MVVM) pattern is held in high regard by many developers as an excellent way of creating sophisticated modern applications. It's clear seperation of presentation and business logic produces a clean implementation that promotes speed, scalability and code reuse in applications with a complex UI. These strengths have found it favor with WPF and Silverlight developers. It is now increasingly being employed for Windows 8 apps, a purpose to which it is ideally suited as this book will show. In this brief, information-rich, guide we will show you how MVVM works with both XAML (C#) and HTML5 (JavaScript) flavors of Windows 8. Beginning with a brief recap of MVVM concepts under .NET - to provide a common frame of reference - we will then delve into the details of how MVVM can best be implemented in Metro-style apps for Windows 8 and show a working application framework in each case. What youll learn How the MVVM pattern can bring elegance, power, speed and reusability to your Windows 8 apps. That MVVM implementations under Windows 8 differ from MVVM implementations under .NET. Produce fully working Metro-style applications using XAML and HTML5 How you can use the popular KnockoutJS Framework to speed the development of your HTML5 Metro apps. Essential tips, tricks and cautions that will allow you to bring your existing .NET skills to bear quickly in the Windows 8 world. Who this book is for This is a fast-paced guide for developers comfortable with both .NET programming and the fundamentals of Windows 8 development. Table of Contents Setting up Windows 8 Application Project Implementing the View Implementing the Model Implementing the ViewModel HTML5, JavaScript, and Windows 8 Applications View, Model and ViewModel Structures in HTML5 and JavaScript","",""
0,"Mario Frei, Lara Mühlemann, M. Walser","Flight Logging System",2012,"","","","",109,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,3,11,"Ausgangslage: Der Segelflugverein Flugsportgruppe Zurcher Oberland erfasst die Starts und Landungen der Segelflieger von Hand auf Startlisten. Dazu mussen diver- se Informationen erfasst werden, unter anderem die Start- /Landezeiten. Ende Monat verrechnet das Sekretariat an- hand dieser Startlisten die Fluge. Die Anzahl Fluge und die Flugdauer mussen hierfur zusammengerechnet werden. Das Ziel dieser Bachelorarbeit ist die Erstellung einer Ap- plikation, in welcher Fluge erfasst, die dazu benotigten Stammdaten verwaltet und Auswertungen erstellt werden konnen. Die Applikation muss mandantenfahig sein, da sie zentral mehreren Segelflugvereinen zur Verfugung gestellt wird.  Vorgehen/Technologien: Aufgrund der bisherigen Er- fahrungen der Teammitglieder wurde das Vorgehen an Ra- tional Unified Process (RUP) angelehnt. Da das Entwickler- team mit den verwendeten Technologien wenig Erfahrung hatte, wurde in der ersten Phase viel Zeit fur die Einarbei- tung in die neuen Technologien verwendet. Bereits in der zweiten Woche wurde mit der Implementation begonnen. Dadurch konnte das Team die Theorie fruh anwenden und sich ein besseres Bild uber die Aufgabe machen. Durch die Aufgabenstellung und die klaren Vorstellungen des Kunden waren die meisten Technologien gegeben. Es wurde einer Silverlight RIA Applikation aufgebaut, welche im Brow- ser gestartet wird und uber WCF-Services und das Entity Framework auf eine Microsoft SQL Datenbank zugreift. Um Reports zu erstellen wurde der Microsoft SQL Reporting Service verwendet.  Ergebnis: In der Abbildung 0.1 ist die Flugerfassung er- sichtlich. Fluge konnen damit einfach erfasst und mittels Buttons gestartet und gelandet werden. In der Abbildung 0.2 ist eine der Stammdatenmasken zu sehen. Uber das Sys- tem konnen Vereine, Benutzer, Personen, Flugzeuge und Flugplatze verwaltet werden. Taglich werden an die Pilo- ten per E-Mail Flugreports uber die an diesem Tag ausge- fuhrten Fluge verschickt. Jeden Monat erhalt das Sekreta- riat fur die Abrechnung einen Report uber die Fluge des Monats. Beide Reporte sind auch uber den Browser abruf- bar. Weiter konnen unter Import/Export die Adressen und Standorte exportiert und importiert werden. Umgesetzt wur- de eine Client-Server Architektur. Auf dem Server befinden sich Services, uber die der Client Daten laden und bearbei- ten kann. Der Client ist aufgeteilt in ClientModels, welche die Daten laden und buffern, ClientServices welche fur die Manipulationen verantwortlich sind und Views, deren Ele- mente an ViewModels gebunden sind. (Siehe Abbildung 0.3)","",""
1,"Z. Hongmei","Design and Implementation of Rich WebGIS Application Framework Based on SilverLight and REST Services",2012,"","","","",110,"2023-02-26 08:25:51","","10.3724/sp.j.1047.2012.00192","","",,,,,1,0.09,1,1,11,"The architecture and implementation technique of WebGIS are always the focus of scholars in its rapid developing process.Aiming at disadvantages of high complexity,poor interactive experience,and low response efficiency in ""traditional"" WebGIS application,this paper proposes a rich WebGIS application framework based on RIA/SilverLight and REST technologies which was divided into data access layer(DAL),business logic layer(BLL) and user interface layer(UI).Silverlight is an application framework for creating and delivering rich internet applications(RIA) and media experiences on the Web,which combining with the representational state transfer(REST) software architecture style can significantly remedy these shortages of ""traditional"" WebGIS application mentioned above.Firstly,in this paper the detailed description on designing and building steps of spatial databases were given,and the optimization experiences on spatial database were shared.Then the composition of business logic layer and its operating mechanism had been analyzed.To improve the efficiency of the user interface layer,the Model-View-ViewModel(MVVM) architectural pattern had been adopted.And to follow the user's habit,the office ribbon style had been used visually.The code-behind was programmed with.NET C#,and according to different function types,it was designed into event center component,configuration management component,UI interactive component,map container component,control management component,auxiliary function component,and the event center component is the communication hub.Finally,based on this framework,a rich WebGIS application which named LightGIS had been developed.It showed that the applied framework can effectively improve the efficiency,enrich user's experience and enhance the system capability.","",""
4,"R. Cameron","Pro Windows Phone 7 Development",2011,"","","","",111,"2023-02-26 08:25:51","","10.1007/978-1-4302-3220-9","","",,,,,4,0.33,4,1,12,"","",""
0,"Andrea Berweger","NET Application Container",2010,"","","","",112,"2023-02-26 08:25:51","","","","",,,,,0,0.00,0,1,13,"Der .NET Application Container ist ein Basissystem, das mit Komponenten (Plugins) erweitert wird. Hauptsachlich besteht der Container aus einem User Interface, das von den Komponenten uber definierte Schnittstellen genutzt werden kann. Das User Interface besitzt Style & Feel des Outlook 2010 von Microsoft. Der Container ladt die Komponenten und integriert sie in das User Interface, das den Komponenten funf verschiedene Bereiche zur Verfugung stellt. Links das Komponentenmenu, der Hauptbereich in der Mitte und rechts der Detailbereich sowie ein Ribbon-Menu oben (bekannt aus Office 2007, 2010). Zusatzlich ist eine Statusleiste am unteren Rand platziert. Fur die Komponenten existiert die Moglichkeit zur Authentisierug und Autorisierung mittels eines speziellen Prinzipals, der vom Container zur Verfugung gestellt wird. Die Berechtigungen werden mit einer Prototypenkomponente administriert.  Zusatzlich existiert eine Konsolenkomponente, die auftretende Fehler und Meldungen sichtbar macht. Allfallige, nicht behandelte Fehler, werden vom Container erfasst, geloggt und es wird nach Moglichkeit die fehlerverursachende Komponente neu geladen, oder falls dies nicht moglich ist, alle Komponenten heruntergefahren und beendet.  Technologien:  • Windows Presentation Foundation (WPF) & Model-View-ViewModel (MVVM)  • Entity Framework (EF)  • Managed Extensibility Framework (MEF)  • .NET Framework 4.0","",""
